{"version":3,"sources":["utils/index.tsx","Classifier/FullBodyPoseEmbedder.tsx","Classifier/PoseClassifier.tsx","assets/fitness_poses_csvs_out_basic.tsx","Components/BakedLandmark.tsx","Classifier/EMADictSmoothing.tsx","Components/PoseDetection.tsx","Components/ShowDataset.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["normL2","arr","sum","i","length","Math","pow","sqrt","convertLandmarkToMatrix","landmarks","map","l","x","y","z","a","b","result","push","sub","subMatrix","multMatrixByVector","console","assert","row","j","scaleArray","abs","absMatrix","maxMatrix","max","Infinity","mean","meanMatrix","loadPose","data","split","tmp_landmark","NaN","slice","forEach","item","parseFloat","name","className","FullBodyPoseEmbedder","sizeMultiplier","_landmarkNames","_torsoSizeMultiplier","canPrint","this","poseCenter","getPoseCenter","landmark","poseSize","getPoseSize","elem","normalizePoseLandmarks","getPoseDistanceEmbedding","indexOf","torsoSizeMultiplier","maxDist","hips","torsoSize","normalizedVector","matrix","matrixNormL2","getDistance","getAverageByNames","getDistanceByNames","nameFrom","nameTo","landmarkFrom","landmarkTo","avgLandmark","lmkFrom","lmkTo","distance","PoseClassifier","topNByMaxDistance","topNNyMeanDistance","axes_weights","poseEmbedder","axesWeights","poseSamples","loadPoseSamples","pose_samples","line","embedding","call","class_name","outliers","sample","pose_landmarks","pose_classification","classify","class_names","items","filter","count","values","includes","len","detected_class","all_classes","pose_embedding","flipped_pose_embedding","visibility","max_dist_heap","max_dist","min","sort","first","second","mean_dist_heap","index","mean_dist","bakedLandmarks","EMADictSmoothing","windowSize","alpha","_windowSize","_alpha","_dataInWindow","unshift","keysArray","key","keys","Set","smoothed_data","factor","top_sum","bottom_sum","auxData","value","PoseDetection","canvasCtx","webcamRef","useRef","canvasReference","useState","cameraLoaded","setCameraLoaded","status","setStatus","statusNumber","setStatusNumber","statusNumberAux","setStatusNumberAux","usingBakedLandmarks","classifier","useEffect","drawLandmarksOnCanvas","results","useCallback","poseLandmarks","getEmbedding","getNormalizedBeforeEmbedding","names","getLandmarksNames","allLandmarksVisible","undefined","distanceFootKneeX","distanceKneeHipY","toFixed","toString","current","getContext","video","width","videoWidth","height","videoHeight","save","clearRect","drawingUtils","drawConnectors","mpPose","POSE_CONNECTIONS","visibilityMin","color","drawLandmarks","Object","POSE_LANDMARKS_LEFT","fillColor","POSE_LANDMARKS_RIGHT","POSE_LANDMARKS_NEUTRAL","restore","pose","Pose","locateFile","file","setOptions","selfieMode","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","Camera","onFrame","send","image","facingMode","start","Container","audio","ref","mirrored","screenshotFormat","videoConstraints","onUserMedia","ShowDataset","form","setForm","isValid","setIsValid","errorFeedback","setErrorFeedback","sampleInfo","setSampleInfo","handleForm","log","validateInput","handleLandmarks","text","FormGroup","role","Form","Control","placeholder","onChange","e","target","isInvalid","Feedback","type","style","fontFamily","App","Navbar","bg","variant","Brand","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7299c06.chunk.js","sourcesContent":["import { Landmark } from \"@mediapipe/pose\";\r\n\r\n/**\r\n * @brief Returns a Norm (L2) from a given vector @p arr\r\n * @param arr A array where the norm will be calculated\r\n * @return The L2 norm of @p arr\r\n */\r\nexport function normL2(arr: number[]): number {\r\n  let sum: number = 0;\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    sum += Math.pow(arr[i], 2);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n}\r\n\r\n/**\r\n * @brief Returns a Norm (L2) from a given matrix @p matrix\r\n * @param matrix A matrix where the norm will be calculated\r\n * @return A vector with the L2 norm of the axis 1 in @p matrix\r\n */\r\nexport function matrixNormL2(matrix: number[][]): number[] {\r\n  let normalizedVector: number[] = [];\r\n\r\n  for (let i = 0; i < matrix.length; i++) {\r\n    normalizedVector.push(normL2(matrix[i]));\r\n  }\r\n\r\n  return normalizedVector;\r\n}\r\n\r\n/**\r\n * @brief Removes the first instance of @p value in the @p arr\r\n * @param arr A Array of alements\r\n * @param value A element to be removed\r\n * @return The same array without the first instance of @p value\r\n */\r\nexport function removeItemOnce(arr: any[], value: any) {\r\n  var index: any = arr.indexOf(value);\r\n  if (index > -1) {\r\n    arr.splice(index, 1);\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n/**\r\n * @brief Removes all instances of @p value in the @p arr\r\n * @param arr A Array of alements\r\n * @param value A element to be removed\r\n * @return The same array without all instances of @p value\r\n */\r\nexport function removeItemAll(arr: any[], value: any) {\r\n  var i = 0;\r\n  while (i < arr.length) {\r\n    if (arr[i] === value) {\r\n      arr.splice(i, 1);\r\n    } else {\r\n      ++i;\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n/**\r\n * @brief\r\n * This function calculates the Euclidian Distance between points.\r\n *\r\n * @param pointA A array of numbers representing the coordenates of the first point in each @p dimention .\r\n * @param pointB A array of numbers representing the coordenates of the second point in each @p dimention .\r\n * @param dimention The dimention that is used in both points\r\n */\r\nexport function euclidianDistance(\r\n  pointA: number[],\r\n  pointB: number[],\r\n  dimention: number\r\n): number {\r\n  //assert(pointA.length == dimention);\r\n  //assert(pointB.length == dimention);\r\n\r\n  let sum: number = 0;\r\n\r\n  for (let i = 0; i < dimention; i++) {\r\n    sum += Math.pow(pointA[i] - pointB[i], 2);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n}\r\n\r\nexport function convertLandmarkToMatrix(landmarks: Landmark[]): number[][] {\r\n  return landmarks.map((l: Landmark) => [l.x, l.y, l.z]);\r\n}\r\n\r\nexport function sum(a: number[], b: number[]): number[] {\r\n  let result: number[] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(a[i] + b[i]);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function sub(a: number[], b: number[]): number[] {\r\n  let result: number[] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(a[i] - b[i]);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function subMatrix(a: number[][], b: number[][]): number[][] {\r\n  let result: number[][] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(sub(a[i], b[i]));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function mult(a: number[], b: number[]): number[] {\r\n  let result: number[] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(a[i] * b[i]);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function multMatrix(a: number[][], b: number[][]): number[][] {\r\n  let result: number[][] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(mult(a[i], b[i]));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function dotMatrixByVector(a: number[][], b: number[]): number[] {\r\n  let result: number[] = [];\r\n  console.assert(a.length > 0 && a[0].length === b.length);\r\n\r\n  for (let i = 0; i < a.length; i++) {\r\n    let elem: number = 0;\r\n    for (let j = 0; j < a[i].length; j++) {\r\n      elem += a[i][j] * b[j];\r\n    }\r\n    result.push(elem);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function multMatrixByVector(a: number[][], b: number[]): number[][] {\r\n  let result: number[][] = [];\r\n  console.assert(a.length > 0 && a[0].length === b.length);\r\n\r\n  for (let i = 0; i < a.length; i++) {\r\n    let row: number[] = [];\r\n    for (let j = 0; j < a[i].length; j++) {\r\n      row.push(a[i][j] * b[j]);\r\n    }\r\n    result.push(row);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function scaleArray(a: number[], b: number): number[] {\r\n  let result: number[] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(a[i] * b);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function div(a: number[], b: number[]): number[] {\r\n  let result: number[] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(a[i] / b[i]);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function abs(a: number[]): number[] {\r\n  let result: number[] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(Math.abs(a[i]));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function absMatrix(a: number[][]): number[][] {\r\n  let result: number[][] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(abs(a[i]));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function maxMatrix(a: number[][]): number {\r\n  let max: number = -Infinity;\r\n\r\n  for (let i = 0; i < a.length; i++) {\r\n    for (let j = 0; j < a[i].length; j++) {\r\n      max = Math.max(max, a[i][j]);\r\n    }\r\n  }\r\n  return max;\r\n}\r\n\r\nexport function mean(a: number[]): number {\r\n  let result: number = 0;\r\n  for (let i = 0; i < a.length; i++) {\r\n    result += a[i];\r\n  }\r\n\r\n  return result / a.length;\r\n}\r\n\r\nexport function meanMatrix(a: number[][]): number {\r\n  let result: number = 0;\r\n  for (let i = 0; i < a.length; i++) {\r\n    result += mean(a[i]);\r\n  }\r\n\r\n  return result / a.length;\r\n}\r\n\r\nexport function maxOnAxisZero(a: number[], b: number[]) {\r\n  let result: number[] = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    result.push(Math.max(a[i], b[i]));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * @brief converts pose data to an array of landmarks\r\n * @param data An string representing the pose. Should be structured as \"sample_00001,x1,y1,z1,x2,y2,z2,....\"\r\n * @return An object containing pose's landmarks, pose's name, and its class\r\n */\r\nexport function loadPose(data: string): {\r\n  landmarks: Landmark[];\r\n  name: string;\r\n  className: string;\r\n} {\r\n  const row = data.split(\",\");\r\n  let landmarks: Landmark[] = [];\r\n  let tmp_landmark: Landmark = { x: NaN, y: NaN, z: NaN };\r\n\r\n  // assert that data has 93 values (33 landmarks * 3 dimensios-xyz)\r\n  console.assert(row.slice(2).length === 33 * 3);\r\n\r\n  row.slice(2).forEach((item: string, i: number) => {\r\n    switch (i % 3) {\r\n      case 0:\r\n        tmp_landmark.x = parseFloat(item);\r\n        break;\r\n      case 1:\r\n        tmp_landmark.y = parseFloat(item);\r\n        break;\r\n      case 2:\r\n        tmp_landmark.z = parseFloat(item);\r\n        landmarks.push(tmp_landmark);\r\n        tmp_landmark = { x: NaN, y: NaN, z: NaN };\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  return { landmarks, name: row[0], className: row[1] };\r\n}\r\n\r\n/**\r\n * @brief Get the smallest distance between one line and two points.\r\n * @param pointA One point in the line\r\n * @param pointB Other point in the line\r\n * @param point The point\r\n * @return The smallest distance between one line and two points\r\n */\r\nexport function distanceBetweenLineAndPoint(\r\n  pointA: number[],\r\n  pointB: number[],\r\n  point: number[]\r\n): number {\r\n  return (\r\n    Math.abs(\r\n      (pointB[0] - pointA[0]) * (pointA[1] - point[1]) -\r\n        (pointA[0] - point[0]) * (pointB[1] - pointA[1])\r\n    ) /\r\n    Math.sqrt(\r\n      (pointB[0] - pointA[0]) * (pointB[0] - pointA[0]) -\r\n        (pointB[1] - pointA[1]) * (pointB[1] - pointA[1])\r\n    )\r\n  );\r\n}\r\n","import {\r\n  normL2,\r\n  matrixNormL2,\r\n  sub,\r\n  scaleArray,\r\n  convertLandmarkToMatrix,\r\n  sum,\r\n} from \"../utils\";\r\nimport { Landmark } from \"@mediapipe/pose\";\r\n\r\n/**\r\n * @class FullBodyPoseEmbedder\r\n * @brief Converts 3D pose landmarks into 3D embedding.\r\n */\r\nexport class FullBodyPoseEmbedder {\r\n  private _landmarkNames: string[]; //<! Names of the landmarks as they appear in the prediction.\r\n  private _torsoSizeMultiplier: number;\r\n  private canPrint = true;\r\n\r\n  /**\r\n   * @brief Constructor for the class\r\n   * @param sizeMultiplier The multiplier that will be used in the normalized representation\r\n   */\r\n  constructor(sizeMultiplier: number = 2.5) {\r\n    this._torsoSizeMultiplier = sizeMultiplier;\r\n    this._landmarkNames = [\r\n      \"nose\",\r\n      \"left_eye_inner\",\r\n      \"left_eye\",\r\n      \"left_eye_outer\",\r\n      \"right_eye_inner\",\r\n      \"right_eye\",\r\n      \"right_eye_outer\",\r\n      \"left_ear\",\r\n      \"right_ear\",\r\n      \"mouth_left\",\r\n      \"mouth_right\",\r\n      \"left_shoulder\",\r\n      \"right_shoulder\",\r\n      \"left_elbow\",\r\n      \"right_elbow\",\r\n      \"left_wrist\",\r\n      \"right_wrist\",\r\n      \"left_pinky_1\",\r\n      \"right_pinky_1\",\r\n      \"left_index_1\",\r\n      \"right_index_1\",\r\n      \"left_thumb_2\",\r\n      \"right_thumb_2\",\r\n      \"left_hip\",\r\n      \"right_hip\",\r\n      \"left_knee\",\r\n      \"right_knee\",\r\n      \"left_ankle\",\r\n      \"right_ankle\",\r\n      \"left_heel\",\r\n      \"right_heel\",\r\n      \"left_foot_index\",\r\n      \"right_foot_index\",\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @brief Normalizes landmarks translation and scale.\r\n   * @param landmarks A vector of landmarks\r\n   * @return The normalized vector\r\n   */\r\n  normalizePoseLandmarks(landmarks: number[][]): number[][] {\r\n    let poseCenter: number[] = this.getPoseCenter(landmarks);\r\n\r\n    // get distance of each landmark from center\r\n    landmarks = landmarks.map((landmark: number[]) => {\r\n      return sub(landmark, poseCenter);\r\n    });\r\n\r\n    let poseSize: number = this.getPoseSize(\r\n      landmarks,\r\n      this._torsoSizeMultiplier\r\n    );\r\n\r\n    // divide array by scalar\r\n    landmarks = landmarks.map((elem: number[]) =>\r\n      scaleArray(elem, 1.0 / poseSize)\r\n    );\r\n\r\n    // multiply array by scalar\r\n    landmarks = landmarks.map((elem: number[]) => scaleArray(elem, 100));\r\n\r\n    return landmarks;\r\n  }\r\n\r\n  /**\r\n   * @brief Calls the PoseEmbedder funcionalite\r\n   * @param landmarks The current landmarks\r\n   * @return The embedding for the @p landmarks\r\n   */\r\n  public call(landmarks: Landmark[] | number[][]) {\r\n    // convert mpPose landmark object to number matrix.\r\n    landmarks = convertLandmarkToMatrix(landmarks as Landmark[]) as number[][];\r\n\r\n    console.assert(\r\n      landmarks.length === this._landmarkNames.length,\r\n      \"Shape dos landmarks não está certo\"\r\n    );\r\n\r\n    // Normalize landmarks.\r\n    landmarks = this.normalizePoseLandmarks(landmarks);\r\n\r\n    //# Get embedding.\r\n    let embedding: any = this.getPoseDistanceEmbedding(landmarks);\r\n\r\n    return embedding;\r\n  }\r\n\r\n  /**\r\n   * @brief Gets the center pose of a array of @p landmarks\r\n   * @param landmarks A array of landmarks\r\n   * @return The central pose in the array\r\n   */\r\n  getPoseCenter(landmarks: number[][]): number[] {\r\n    let leftHip: number[] = landmarks[this._landmarkNames.indexOf(\"left_hip\")];\r\n    let rightHip: number[] =\r\n      landmarks[this._landmarkNames.indexOf(\"right_hip\")];\r\n\r\n    return scaleArray(sum(leftHip, rightHip), 0.5); // todo: make a more generic approx from this, the code will not work, because in some places we need three coordenates, althrough other we need only two\r\n  }\r\n\r\n  /**\r\n   * @brief Calculates the pose size\r\n   * @param landmarks A vector of landmarks\r\n   * @param torsoSizeMultiplier A number to represent the multiplicator factor for the torso\r\n   * @return The maximum of two values: the distance between the pose center to any pose landmark and the torso size * @p torsoSizeMultiplier\r\n   */\r\n  getPoseSize(landmarks: number[][], torsoSizeMultiplier: number) {\r\n    // This approach uses only 2D landmarks to compute pose size.\r\n    landmarks = landmarks.map((elem: number[]) => [elem[0], elem[1]]);\r\n\r\n    // Hips center.\r\n    let leftHip: number[] = landmarks[this._landmarkNames.indexOf(\"left_hip\")];\r\n    let rightHip: number[] =\r\n      landmarks[this._landmarkNames.indexOf(\"right_hip\")];\r\n\r\n    let hips: number[] = scaleArray(sum(leftHip, rightHip), 0.5);\r\n\r\n    // Shoulders center.\r\n    let leftShoulder: number[] =\r\n      landmarks[this._landmarkNames.indexOf(\"left_shoulder\")];\r\n    let rightShoulder: number[] =\r\n      landmarks[this._landmarkNames.indexOf(\"right_shoulder\")];\r\n\r\n    let shoulders: number[] = scaleArray(sum(leftShoulder, rightShoulder), 0.5);\r\n\r\n    // Torso size as the minimum body size.\r\n    let torsoSize: number = normL2(sub(shoulders, hips));\r\n\r\n    // Max dist to pose center.\r\n    let poseCenter: number[] = this.getPoseCenter(landmarks);\r\n    let maxDist: number = -Infinity;\r\n    //let maxDist: any = np.max(np.linalg.norm(landmarks - poseCenter, axis=1));\r\n\r\n    let normalizedVector: number[] = matrixNormL2(\r\n      landmarks.map((landmark: number[]) => sub(landmark, poseCenter))\r\n    );\r\n\r\n    maxDist = Math.max(...normalizedVector);\r\n\r\n    /*\r\n      This line tries to remove the center pose from the landmarks\r\n    */\r\n\r\n    return Math.max(torsoSize * torsoSizeMultiplier, maxDist);\r\n  }\r\n\r\n  getPoseDistanceEmbedding(landmarks: number[][]) {\r\n    // Converts pose landmarks into 3D embedding.\r\n\r\n    // We use several pairwise 3D distances to form pose embedding. All distances\r\n    // include X and Y components with sign. We differnt types of pairs to cover\r\n    // different pose classes. Feel free to remove some or add new.\r\n\r\n    // Args:\r\n    //   landmarks - NumPy array with 3D landmarks of shape (N, 3).\r\n\r\n    // Result:\r\n    //   Numpy array with pose embedding of shape (M, 3) where `M` is the number of\r\n    //   pairwise distances.\r\n\r\n    const embedding = [\r\n      // One joint.\r\n\r\n      this.getDistance(\r\n        this.getAverageByNames(landmarks, \"left_hip\", \"right_hip\"),\r\n        this.getAverageByNames(landmarks, \"left_shoulder\", \"right_shoulder\")\r\n      ),\r\n\r\n      this.getDistanceByNames(landmarks, \"left_shoulder\", \"left_elbow\"),\r\n      this.getDistanceByNames(landmarks, \"right_shoulder\", \"right_elbow\"),\r\n\r\n      this.getDistanceByNames(landmarks, \"left_elbow\", \"left_wrist\"),\r\n      this.getDistanceByNames(landmarks, \"right_elbow\", \"right_wrist\"),\r\n\r\n      this.getDistanceByNames(landmarks, \"left_hip\", \"left_knee\"),\r\n      this.getDistanceByNames(landmarks, \"right_hip\", \"right_knee\"),\r\n\r\n      this.getDistanceByNames(landmarks, \"left_knee\", \"left_ankle\"),\r\n      this.getDistanceByNames(landmarks, \"right_knee\", \"right_ankle\"),\r\n\r\n      // Two joints.\r\n\r\n      this.getDistanceByNames(landmarks, \"left_shoulder\", \"left_wrist\"),\r\n      this.getDistanceByNames(landmarks, \"right_shoulder\", \"right_wrist\"),\r\n\r\n      this.getDistanceByNames(landmarks, \"left_hip\", \"left_ankle\"),\r\n      this.getDistanceByNames(landmarks, \"right_hip\", \"right_ankle\"),\r\n\r\n      // Four joints.\r\n\r\n      this.getDistanceByNames(landmarks, \"left_hip\", \"left_wrist\"),\r\n      this.getDistanceByNames(landmarks, \"right_hip\", \"right_wrist\"),\r\n\r\n      // Five joints.\r\n\r\n      this.getDistanceByNames(landmarks, \"left_shoulder\", \"left_ankle\"),\r\n      this.getDistanceByNames(landmarks, \"right_shoulder\", \"right_ankle\"),\r\n\r\n      this.getDistanceByNames(landmarks, \"left_hip\", \"left_wrist\"),\r\n      this.getDistanceByNames(landmarks, \"right_hip\", \"right_wrist\"),\r\n\r\n      // Cross body.\r\n\r\n      this.getDistanceByNames(landmarks, \"left_elbow\", \"right_elbow\"),\r\n      this.getDistanceByNames(landmarks, \"left_knee\", \"right_knee\"),\r\n\r\n      this.getDistanceByNames(landmarks, \"left_wrist\", \"right_wrist\"),\r\n      this.getDistanceByNames(landmarks, \"left_ankle\", \"right_ankle\"),\r\n    ];\r\n    // Body bent direction.\r\n\r\n    // this.getDistance(\r\n    //     this.getAverageByNames(landmarks, 'left_wrist', 'left_ankle'),\r\n    //     landmarks[this.landmark_names.index('left_hip')]),\r\n    // this.getDistance(\r\n    //     this.getAverageByNames(landmarks, 'right_wrist', 'right_ankle'),\r\n    //     landmarks[this.landmark_names.index('right_hip')]),\r\n\r\n    return embedding;\r\n  }\r\n\r\n  /**\r\n   * @brief Calculates the average between two landmarks by it's names\r\n   * @param landmarks A vector of landmarks\r\n   * @param nameFrom A landmark from we are as a name\r\n   * @param nameTo A landmark where we goes as a name\r\n   * @return The average between @p nameTo, @p nameFrom\r\n   */\r\n  getAverageByNames(landmarks: number[][], nameFrom: string, nameTo: string) {\r\n    const landmarkFrom: number[] =\r\n      landmarks[this._landmarkNames.indexOf(nameFrom)]; // todo: see if this is the equivalent function\r\n    const landmarkTo: number[] = landmarks[this._landmarkNames.indexOf(nameTo)];\r\n\r\n    let avgLandmark: any = [];\r\n\r\n    for (let i = 0; i < landmarkFrom.length; i++) {\r\n      avgLandmark.push(landmarkFrom[i] + landmarkTo[i]);\r\n    }\r\n\r\n    return avgLandmark.map((x: number) => x * 0.5); // todo: check if it's correct (compare with approach below)\r\n    // return (lmk_from + lmk_to) * 0.5 (python version)\r\n  }\r\n\r\n  /**\r\n   * @brief Calculates the distance between two landmarks by it's names\r\n   * @param landmarks A vector of landmarks\r\n   * @param nameFrom A landmark from we are as a name\r\n   * @param nameTo A landmark where we goes as a name\r\n   * @return The distance between @p nameTo, @p nameFrom\r\n   */\r\n  getDistanceByNames(landmarks: number[][], nameFrom: string, nameTo: string) {\r\n    const lmkFrom: number[] = landmarks[this._landmarkNames.indexOf(nameFrom)];\r\n    const lmkTo: number[] = landmarks[this._landmarkNames.indexOf(nameTo)];\r\n    return this.getDistance(lmkFrom, lmkTo);\r\n  }\r\n\r\n  /**\r\n   * @brief Calculates the distance between two landmarks\r\n   * @param landmarkFrom A landmark from we are\r\n   * @param landmarkTo A landmark where we goes\r\n   * @return The distance between @p landmarkTo, @p landmarkFrom\r\n   */\r\n  getDistance(landmarkFrom: number[], landmarkTo: number[]) {\r\n    let distance: any = [];\r\n\r\n    for (let i = 0; i < landmarkFrom.length; i++) {\r\n      distance.push(landmarkTo[i] - landmarkFrom[i]);\r\n    }\r\n\r\n    return distance; // todo: see if this subtracts all diementions\r\n  }\r\n\r\n\r\n  public getNormalizedBeforeEmbedding(landmarks: Landmark[] | number[][]) {\r\n    landmarks = convertLandmarkToMatrix(landmarks as Landmark[]) as number[][];\r\n\r\n    console.assert(\r\n      landmarks.length === this._landmarkNames.length,\r\n      \"Shape dos landmarks não está certo\"\r\n    );\r\n\r\n    // Normalize landmarks.\r\n    landmarks = this.normalizePoseLandmarks(landmarks);\r\n\r\n    return landmarks;\r\n  }\r\n\r\n  public getLandmarksNames() {\r\n    return this._landmarkNames;\r\n  }\r\n}\r\n","import { dataSimple as data } from \"../assets/fitness_poses_csvs_out_basic\";\r\nimport { FullBodyPoseEmbedder } from \"./FullBodyPoseEmbedder\";\r\nimport { Landmark } from \"@mediapipe/pose\";\r\nimport {\r\n  subMatrix,\r\n  absMatrix,\r\n  multMatrixByVector,\r\n  maxMatrix,\r\n  meanMatrix\r\n} from \"../utils\";\r\n\r\nexport interface PoseSample {\r\n  name: string;\r\n  landmarks: Landmark[];\r\n  class_name: string;\r\n  embedding: any;\r\n}\r\n\r\nexport interface PoseSampleOutlier {\r\n  sample: any;\r\n  detected_class: any;\r\n  all_classes: any[];\r\n}\r\n\r\nexport class PoseClassifier {\r\n  // Classifies pose landmarks.\r\n  poseEmbedder: FullBodyPoseEmbedder = new FullBodyPoseEmbedder();\r\n  topNByMaxDistance: number;\r\n  topNNyMeanDistance: number;\r\n  axesWeights: number[];\r\n  poseSamples: any[];\r\n\r\n  constructor(\r\n    topNByMaxDistance: number = 30,\r\n    topNNyMeanDistance: number = 10,\r\n    axes_weights: number[] = [1, 1, 0.2]\r\n  ) {\r\n    this.poseEmbedder = new FullBodyPoseEmbedder();\r\n    this.topNByMaxDistance = topNByMaxDistance;\r\n    this.topNNyMeanDistance = topNNyMeanDistance;\r\n    this.axesWeights = axes_weights;\r\n\r\n    this.poseSamples = this.loadPoseSamples();\r\n  }\r\n\r\n  loadPoseSamples() {\r\n    // Loads pose samples from a given folder.\r\n\r\n    // Required folder structure:\r\n    //   neutral_standing.csv\r\n    //   pushups_down.csv\r\n    //   pushups_up.csv\r\n    //   squats_down.csv\r\n    //   ...\r\n\r\n    // Required CSV structure:\r\n    //   sample_00001,x1,y1,z1,x2,y2,z2,....\r\n    //   sample_00002,x1,y1,z1,x2,y2,z2,....\r\n    //   ...\r\n\r\n    // Each file in the folder represents one pose class.\r\n\r\n    // todo: only works for one file, not N\r\n    // const data = fs.readFileSync(\r\n    //   \"../assets/fitness_poses_csvs_out_basic.csv\",\r\n    //   \"utf-8\"\r\n    // );\r\n    let pose_samples: PoseSample[] = [];\r\n    data.split(\"\\n\").forEach((line: string, i: number) => {\r\n      if (i === 0) return;\r\n\r\n      const row = line.split(\",\");\r\n      let landmarks: Landmark[] = [];\r\n      let tmp_landmark: Landmark = { x: NaN, y: NaN, z: NaN };\r\n\r\n      console.assert(row.slice(2).length === 33 * 3);\r\n\r\n      row.slice(2).forEach((item: string, i: number) => {\r\n        switch (i % 3) {\r\n          case 0:\r\n            tmp_landmark.x = parseFloat(item);\r\n            break;\r\n          case 1:\r\n            tmp_landmark.y = parseFloat(item);\r\n            break;\r\n          case 2:\r\n            tmp_landmark.z = parseFloat(item);\r\n            landmarks.push(tmp_landmark);\r\n            tmp_landmark = { x: NaN, y: NaN, z: NaN };\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      pose_samples.push({\r\n        landmarks: landmarks,\r\n        embedding: this.poseEmbedder.call(landmarks),\r\n        name: row[0],\r\n        class_name: row[1],\r\n      });\r\n    });\r\n\r\n    return pose_samples;\r\n\r\n    // TODO: CSV PARSE\r\n    // file_names = [name for name in os.listdir(pose_samples_folder) if name.endswith(file_extension)]\r\n\r\n    // pose_samples = []\r\n    // for file_name in file_names:\r\n    //   // Use file name as pose class name.\r\n    //   class_name = file_name[:-(len(file_extension) + 1)]\r\n\r\n    //   // Parse CSV.\r\n    //   with open(os.path.join(pose_samples_folder, file_name)) as csv_file:\r\n    //     csv_reader = csv.reader(csv_file, delimiter=file_separator)\r\n    //     for row in csv_reader:\r\n    //       assert len(row) == n_landmarks * n_dimensions + 1, 'Wrong number of values: {}'.format(len(row))\r\n    //       landmarks = np.array(row[1:], np.float32).reshape([n_landmarks, n_dimensions])\r\n    //       pose_samples.append(PoseSample(\r\n    //           name=row[0],\r\n    //           landmarks=landmarks,\r\n    //           class_name=class_name,\r\n    //           embedding=pose_embedder(landmarks),\r\n    //       ))\r\n\r\n    // return pose_samples\r\n  }\r\n\r\n  find_pose_sample_outliers() {\r\n    // Classifies each sample against the entire database.\r\n    // Find outliers in target poses\r\n    let outliers: PoseSampleOutlier[] = [];\r\n    this.poseSamples.forEach((sample: any) => {\r\n      // Find nearest poses for the target one.\r\n      let pose_landmarks = sample.landmarks;\r\n      const pose_classification = this.classify(pose_landmarks);\r\n\r\n      // todo: check with line below\r\n      let class_names = pose_classification\r\n        .items()\r\n        .filter((item: any) => item.count === pose_classification.values());\r\n      // class_names = [class_name for class_name, count in pose_classification.items() if count == max(pose_classification.values())]\r\n\r\n      // todo: check with if statement below\r\n      // Sample is an outlier if nearest poses have different class or more than\r\n      // one pose class is detected as nearest.\r\n      if (!class_names.includes(sample.class_name) || class_names.len !== 1) {\r\n        outliers.push({\r\n          sample: sample,\r\n          detected_class: class_names,\r\n          all_classes: pose_classification,\r\n        });\r\n      }\r\n      // if (sample.class_name not in class_names or len(class_names) != 1){\r\n      //   outliers.append(PoseSampleOutlier(sample, class_names, pose_classification))\r\n      // }\r\n    });\r\n\r\n    return outliers;\r\n  }\r\n\r\n  classify(pose_landmarks: Landmark[]) {\r\n    // Classifies given pose.\r\n\r\n    // Classification is done in two stages:\r\n    //   * First we pick top-N samples by MAX distance. It allows to remove samples\r\n    //     that are almost the same as given pose, but has few joints bent in the\r\n    //     other direction.\r\n    //   * Then we pick top-N samples by MEAN distance. After outliers are removed\r\n    //     on a previous step, we can pick samples that are closes on average.\r\n\r\n    // Args:\r\n    //   pose_landmarks: NumPy array with 3D landmarks of shape (N, 3).\r\n\r\n    // Returns:\r\n    //   Dictionary with count of nearest pose samples from the database. Sample:\r\n    //     {\r\n    //       'pushups_down': 8,\r\n    //       'pushups_up': 2,\r\n    //     }\r\n    //\r\n\r\n    // TODO:\r\n    // Check that provided and target poses have the same shape.\r\n    // assert pose_landmarks.shape == (this._n_landmarks, this._n_dimensions), 'Unexpected shape: {}'.format(pose_landmarks.shape)\r\n\r\n    // Get given pose embedding.\r\n    let pose_embedding: any = this.poseEmbedder.call(pose_landmarks);\r\n\r\n    // let flipped = ;\r\n\r\n    let flipped_pose_embedding = this.poseEmbedder.call(\r\n      pose_landmarks.map((landmark: Landmark) => {\r\n        return {\r\n          x: landmark.x * -1,\r\n          y: landmark.y,\r\n          z: landmark.z,\r\n          visibility: landmark.visibility,\r\n        };\r\n      })\r\n    );\r\n\r\n    // Filter by max distance.\r\n    //\r\n    // That helps to remove outliers - poses that are almost the same as the\r\n    // given one, but has one joint bent into another direction and actually\r\n    // represnt a different pose class.\r\n    // todo: check all code below!!!\r\n    // let max_dist_heap: { dist: number; index: number }[] = [];\r\n    let max_dist_heap: number[][] = [];\r\n\r\n    this.poseSamples.map((sample: any, i: number) => {\r\n      let max_dist = Math.min(\r\n        maxMatrix(\r\n          absMatrix(\r\n            multMatrixByVector(\r\n              subMatrix(sample.embedding, pose_embedding),\r\n              this.axesWeights\r\n            )\r\n          )\r\n        ),\r\n        maxMatrix(\r\n          absMatrix(\r\n            multMatrixByVector(\r\n              subMatrix(sample.embedding, flipped_pose_embedding),\r\n              this.axesWeights\r\n            )\r\n          )\r\n        )\r\n      );\r\n      max_dist_heap.push([max_dist, i]);\r\n    });\r\n\r\n    max_dist_heap = max_dist_heap.sort(\r\n      (first: number[], second: number[]) => first[0] - second[0]\r\n    );\r\n    max_dist_heap = max_dist_heap.slice(0, this.topNByMaxDistance);\r\n\r\n    // for sample_idx, sample in enumerate(this._pose_samples):\r\n    //   max_dist = min(\r\n    //       np.max(np.abs(sample.embedding - pose_embedding) * this._axes_weights),\r\n    //       np.max(np.abs(sample.embedding - flipped_pose_embedding) * this._axes_weights),\r\n    //   )\r\n    //   max_dist_heap.append([max_dist, sample_idx])\r\n\r\n    // max_dist_heap = sorted(max_dist_heap, key=lambda x: x[0])\r\n    // max_dist_heap = max_dist_heap[:this._top_n_by_max_distance]\r\n\r\n    // Filter by mean distance.\r\n    //\r\n    // After removing outliers we can find the nearest pose by mean distance.\r\n    let mean_dist_heap: any[] = []; // todo: fix this type\r\n    max_dist_heap.map(([_, index]: number[]) => {\r\n      // let sample_idx = item.sample_idx;\r\n      let sample = this.poseSamples[index];\r\n      let mean_dist = Math.min(\r\n        meanMatrix(\r\n          absMatrix(\r\n            multMatrixByVector(\r\n              subMatrix(sample.embedding, pose_embedding),\r\n              this.axesWeights\r\n            )\r\n          )\r\n        ),\r\n        meanMatrix(\r\n          absMatrix(\r\n            multMatrixByVector(\r\n              subMatrix(sample.embedding, flipped_pose_embedding),\r\n              this.axesWeights\r\n            )\r\n          )\r\n        )\r\n      );\r\n      mean_dist_heap.push([mean_dist, index]);\r\n    });\r\n\r\n    mean_dist_heap = mean_dist_heap.sort(\r\n      (first: number[], second: number[]) => first[0] - second[0]\r\n    );\r\n    mean_dist_heap = mean_dist_heap.slice(0, this.topNNyMeanDistance);\r\n\r\n    let class_names = mean_dist_heap.map(\r\n      ([_, index]: number[]) => this.poseSamples[index].class_name\r\n    );\r\n\r\n    let result: any = {};\r\n    class_names.forEach((item: string) => {\r\n      if (item in result) {\r\n        result[item] += 1;\r\n      } else {\r\n        result[item] = 1;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public getEmbedding() {\r\n    return this.poseEmbedder;\r\n  }\r\n}\r\n","export const data = `image,name,x0,y0,z0,x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4,x5,y5,z5,x6,y6,z6,x7,y7,z7,x8,y8,z8,x9,y9,z9,x10,y10,z10,x11,y11,z11,x12,y12,z12,x13,y13,z13,x14,y14,z14,x15,y15,z15,x16,y16,z16,x17,y17,z17,x18,y18,z18,x19,y19,z19,x20,y20,z20,x21,y21,z21,x22,y22,z22,x23,y23,z23,x24,y24,z24,x25,y25,z25,x26,y26,z26,x27,y27,z27,x28,y28,z28,x29,y29,z29,x30,y30,z30,x31,y31,z31,x32,y32,z32\r\nimage_001.jpg,pushups_down,363.15223,558.11394,-291.7674,373.38623,544.31175,-262.41804,380.09046,544.76105,-262.4367,386.95284,545.09216,-262.58377,354.11879,543.94543,-261.53182,347.03212,543.78681,-261.55752,339.93234,543.76293,-261.56942,394.68731,557.25464,-125.16317,330.56793,554.82719,-116.74658,374.14421,579.28688,-243.61094,349.57355,578.37616,-241.1108,435.30763,641.01059,-40.99875,278.47196,637.82948,-53.91264,539.03998,706.97815,-140.59499,178.91034,701.51543,-203.90711,521.83074,608.38997,-218.36378,207.79137,595.36888,-346.11811,522.94984,571.68327,-248.99633,209.75153,559.44633,-372.70182,513.34502,563.94081,-209.11366,221.59901,551.90041,-338.54302,506.15523,583.11409,-208.67684,228.81723,570.67131,-337.5934,403.47867,830.72227,2.17299,310.28614,828.7307,-1.70841,484.62701,917.30721,-369.85285,246.05951,909.46251,-324.76713,433.34233,1063.26744,-108.44239,272.77468,1046.0112,-87.77368,407.82989,1082.3027,-90.57781,290.0899,1066.3662,-71.23412,471.69164,1130.12474,-245.2884,241.58294,1106.0482,-217.99231\r\nimage_002.jpg,pushups_down,368.06019,610.07641,-279.60971,379.37412,595.51075,-246.79465,386.76747,595.83977,-246.80586,394.3368,596.03355,-246.90594,358.73955,594.9873,-245.65457,351.22938,594.85191,-245.56107,343.7042,594.89067,-245.68112,403.77366,606.78661,-100.15529,333.37171,605.12684,-94.48667,380.35541,630.94154,-227.93788,353.7447,629.99565,-225.64283,441.91751,685.56282,-17.34341,280.12045,683.23502,-31.62942,548.44342,746.77155,-112.85681,172.00106,740.32135,-165.19902,517.08754,654.92279,-160.42933,214.73656,641.05469,-238.85597,515.3199,621.85841,-189.75345,220.34811,610.3175,-259.09034,503.194,616.32336,-140.97692,232.49164,602.80357,-223.21607,495.96526,634.68895,-144.65126,237.94697,621.12255,-226.44052,409.38048,867.22038,-1.84183,313.31639,869.58427,2.54626,477.33536,901.64192,-438.60384,254.15314,908.8015,-401.50825,431.33607,1055.11719,-137.37807,275.64094,1048.28735,-109.21129,410.70678,1075.65575,-115.50981,292.09313,1066.55167,-90.7948,459.92349,1123.75473,-281.50166,248.91524,1112.51808,-254.55949\r\nimage_003.jpg,pushups_down,375.26071,641.40564,-410.52301,386.72659,626.69029,-376.83209,393.93524,627.63866,-376.81798,401.32032,628.47523,-376.80454,366.71524,624.39625,-375.1965,359.25215,623.30139,-375.11678,351.72849,622.41325,-374.93623,408.62878,639.6476,-201.5644,340.02038,631.09344,-187.53041,385.18702,662.93129,-347.06914,359.16292,659.35532,-342.83129,443.35811,717.66106,-121.50612,278.56821,707.83417,-99.93561,534.59303,786.10107,-377.62761,173.12924,776.08665,-322.10947,517.74974,694.18922,-641.63822,201.24327,678.34206,-538.29704,523.2964,662.75673,-709.46224,202.51144,646.01822,-582.60411,508.97427,656.06834,-658.42369,216.86359,635.71709,-543.83186,499.1748,672.43042,-631.36585,223.58067,653.33847,-528.66735,399.8721,888.26584,-6.39539,305.57822,886.20552,6.99108,492.16522,903.06824,-584.00323,243.32317,903.80295,-541.56993,438.83314,1053.53439,-212.681,268.1323,1047.77939,-197.17978,415.54111,1071.80618,-185.84528,284.1281,1067.03979,-171.89941,465.81363,1121.36009,-385.91878,247.81727,1107.80411,-373.60922\r\nimage_004.jpg,pushups_down,433.92344,659.63348,-102.88981,440.6703,646.18576,-69.01266,446.14841,647.23495,-69.05663,451.75894,648.26981,-69.16123,423.70295,642.966,-84.60892,416.7448,641.20148,-84.64381,409.69541,639.57672,-84.82985,449.90678,655.34576,86.11003,393.19736,643.71025,18.84709,437.8312,677.65633,-49.0316,415.07768,673.04504,-67.03965,446.34002,737.47894,141.2397,325.02535,698.84575,25.39669,472.2323,770.55374,39.66857,265.36428,778.29811,-88.49686,480.05373,702.57942,-102.87659,308.80175,695.63828,-194.78002,486.96539,690.50072,-142.23058,320.67949,674.76288,-217.54058,480.97484,681.5744,-123.79147,323.99021,655.67963,-225.11323,474.19192,688.54874,-103.96039,323.80302,668.28384,-198.75453,327.62137,904.46701,73.62465,253.21783,882.09488,-73.4414,456.28635,894.03862,-204.48153,331.05044,905.27618,-446.37574,365.03123,1030.11826,-127.25121,254.86321,1067.24564,-405.38196,330.13933,1046.55373,-125.20128,234.0911,1085.00992,-403.84786,401.03338,1095.03418,-240.51945,275.51877,1141.24084,-542.92854\r\nimage_005.jpg,pushups_down,219.11297,607.76539,-128.29758,232.92843,590.67299,-113.684,240.33045,589.2757,-113.5611,247.76388,587.77184,-113.64694,217.49505,593.87047,-94.18375,212.58377,594.75563,-94.34344,207.81489,595.85876,-94.40025,273.19778,593.7674,-21.49363,221.65638,602.44972,62.95639,243.92058,621.91475,-98.37884,220.87377,626.39893,-73.72546,356.02575,656.67236,-74.47833,250.49226,700.00885,143.68094,439.06341,725.71655,-270.90296,265.40869,762.12105,-6.60085,368.83019,618.23975,-405.8621,215.46878,664.1581,-223.855,351.78326,589.47254,-445.17874,206.65515,641.7952,-254.03151,347.95541,578.97713,-434.51208,197.51887,633.61275,-250.75362,351.21471,596.70357,-404.62094,208.40253,641.76918,-230.51099,446.6239,880.92369,-92.87281,381.77448,896.30844,92.98502,290.67284,896.27853,-286.09311,188.71685,905.45258,-63.09911,397.23509,1084.85085,-245.39445,305.67205,1048.88573,-108.51635,435.39768,1103.61816,-237.5054,347.51062,1060.92041,-111.646,346.61347,1173.25729,-286.42157,262.43219,1125.56351,-127.21703\r\nimage_006.jpg,pushups_down,248.21524,588.67485,-298.39108,264.9744,570.22297,-282.87232,274.05494,569.89281,-282.80603,283.25485,569.42436,-282.83008,243.06149,571.74034,-264.68875,235.89004,572.05677,-264.7039,228.72837,572.65209,-264.81894,306.60071,580.73097,-176.61063,231.8289,584.20784,-87.54539,269.87005,612.22889,-260.05877,242.31698,613.03841,-234.33802,379.53413,666.60957,-79.66007,207.63713,691.41022,-16.75998,509.23209,739.42368,-238.87233,124.60595,781.53145,-138.99705,447.17671,629.17137,-365.46001,128.58009,660.19463,-233.68783,432.24262,588.90022,-399.53259,122.63157,621.90193,-243.94726,420.04591,576.26892,-352.8376,134.59782,611.05751,-194.69433,417.65862,601.60042,-350.34266,148.39903,629.80541,-218.16671,388.66263,885.59517,-41.63541,286.01023,891.90491,42.10127,407.65064,913.29086,-482.74938,155.49005,893.50693,-227.46543,411.26424,1101.77475,-229.56051,235.16256,1069.61708,-26.70683,405.53228,1132.53014,-210.83553,273.52122,1097.74803,-13.5174,417.51083,1162.8389,-376.37947,171.4823,1144.3248,-113.81307\r\nimage_007.jpg,pushups_down,235.09806,637.08275,-308.51679,255.09546,617.20043,-302.6029,264.8251,617.14539,-302.51452,274.64902,616.9453,-302.57078,232.66372,617.33448,-277.95596,225.69993,616.93565,-277.94856,218.72574,616.83662,-278.10983,301.86618,625.7539,-216.40895,225.23019,624.55009,-100.31459,258.07407,659.67934,-275.46936,230.26147,658.76373,-241.87774,374.21799,704.71344,-106.9471,198.30337,724.08699,-38.1347,499.60667,782.66983,-258.73922,130.12007,826.3987,-166.02471,436.62699,680.73822,-376.86444,124.67088,704.87312,-272.57373,423.00104,641.85638,-405.59281,116.83968,665.77087,-284.4292,412.6312,630.34454,-353.67667,124.93967,654.78439,-239.49175,408.33223,654.15619,-358.71337,140.12158,673.3728,-258.82647,376.1306,915.08339,-42.21548,272.96284,919.53979,42.73902,429.93112,912.03598,-485.39776,149.19275,902.94342,-222.34891,409.56849,1108.01956,-243.27465,223.83834,1076.97403,-54.83917,399.48079,1137.40379,-224.43103,258.8668,1103.57201,-43.93106,415.09016,1170.29274,-392.39323,168.34616,1146.89697,-146.68686\r\nimage_001.jpg,pushups_up,258.85022,238.98006,-258.4566,274.24607,221.86596,-237.09904,282.24923,221.49738,-237.06161,290.44265,221.00903,-237.22394,254.75608,223.80112,-211.96204,248.80161,224.34753,-212.10255,242.74626,225.1173,-212.38287,314.10103,233.09601,-81.92415,249.90772,237.09297,36.62246,281.49546,260.40207,-202.42245,255.71149,262.39649,-167.66579,397.7524,337.01267,26.39107,215.73484,357.8125,170.16205,525.16375,393.8765,-178.81457,150.36844,455.40298,37.7618,471.45101,271.14681,-472.53895,165.40727,342.83424,-264.89478,464.06319,236.25309,-544.76246,173.07476,314.83484,-325.76346,448.19822,229.48463,-527.30562,178.56871,297.99377,-322.23171,442.93204,247.63607,-473.24821,185.52023,311.80969,-271.18155,365.45095,647.1286,-53.63097,257.2416,651.34239,53.8599,391.51078,874.77585,-88.93246,243.35395,870.72723,55.72453,411.46123,1085.69275,121.07854,236.98237,1072.81151,257.49903,409.39845,1115.63278,127.05765,250.9661,1107.80838,263.40411,410.31164,1147.74948,-116.0206,182.45072,1125.07141,49.94658\r\nimage_002.jpg,pushups_up,381.90429,329.13162,-747.23322,394.33833,316.59073,-711.09553,401.25578,317.55579,-710.85884,408.30821,318.40908,-710.83574,374.35899,314.97021,-713.60517,367.45361,314.38747,-713.39373,360.54132,313.97491,-713.3768,416.18367,333.72013,-465.92811,351.34698,327.34554,-475.31403,393.22773,350.76099,-653.89011,367.35598,347.86263,-656.63845,446.87786,432.90115,-291.00306,300.36737,418.12157,-321.02869,547.0769,507.26208,-635.35512,193.57824,467.86175,-664.64648,511.99046,398.45749,-1106.12547,245.79486,380.17597,-1074.30301,505.4547,372.07245,-1196.20958,256.34668,357.03335,-1155.61837,493.64448,359.86,-1172.18356,272.83692,353.34877,-1134.8766,490.62314,375.14198,-1107.7543,274.17269,367.89165,-1074.187,401.49436,667.44026,6.35206,313.87789,664.73953,-6.09968,406.74882,865.58121,-0.94884,297.07438,866.12228,-26.55352,421.71622,1051.30089,241.31201,276.45331,1049.63806,198.56868,411.70241,1081.49353,248.09193,279.28491,1077.30896,202.70778,456.79263,1099.5903,-18.95009,264.09138,1101.71043,-61.45959\r\nimage_003.jpg,pushups_up,373.6943,323.20648,-500.72298,385.35557,311.38203,-466.0859,391.96203,312.28174,-465.89076,398.66919,313.06278,-465.87193,365.92604,310.2766,-466.4628,359.28219,309.96637,-466.37669,352.62527,309.79488,-466.4335,406.65464,329.0332,-251.4235,343.76665,324.07135,-255.71526,384.83013,345.42912,-421.48023,359.68015,343.43979,-422.77516,441.59281,431.59927,-125.65175,293.47943,424.72382,-134.77588,524.13811,507.57439,-384.88149,196.81207,486.27693,-380.03161,518.19134,394.80095,-800.64031,215.86782,386.35872,-737.94883,524.15022,363.71269,-889.81264,216.13785,357.48379,-819.81043,512.18853,353.99765,-875.80908,229.18492,352.146,-810.61687,503.93853,370.15114,-807.55817,235.28124,367.14333,-744.24196,404.89295,677.72034,9.0775,318.12829,675.11566,-8.78068,417.06664,869.81621,18.77324,297.8056,871.52634,-51.74391,426.08429,1051.78444,253.12533,278.93674,1056.93741,135.96091,415.99043,1080.29686,259.92819,282.00918,1083.57162,137.18226,454.35232,1099.23233,10.6127,265.3278,1109.51233,-113.2007\r\nimage_004.jpg,pushups_up,378.31592,326.0743,-385.64633,390.06056,313.78479,-352.02044,396.83286,314.62683,-351.83699,403.72546,315.34266,-351.83633,370.26867,312.82486,-351.35946,363.44439,312.54803,-351.28214,356.61254,312.42029,-351.35905,412.72077,330.88142,-150.95742,348.03929,326.50024,-147.15819,390.31545,348.20683,-312.31107,364.42391,346.49715,-311.32594,449.51866,433.79631,-26.2358,297.22445,426.07742,-45.64553,535.21294,501.6679,-265.24943,207.37304,490.50072,-263.99667,529.61615,391.30032,-664.42419,218.3808,389.91936,-605.04118,536.6082,360.57861,-751.06757,215.81756,362.19856,-686.5356,522.43928,352.43099,-736.83074,230.12979,355.66643,-679.85525,513.99378,367.56416,-671.28539,237.69517,370.00607,-612.03468,408.53665,676.31172,8.1728,317.92862,673.79463,-7.7148,422.80089,867.39227,-3.40291,298.90793,870.50491,-42.90637,431.34083,1050.50949,221.6046,274.84669,1050.27489,165.1498,421.22227,1076.06812,228.93826,274.76178,1073.49831,169.36046,452.33117,1106.40091,-13.77375,272.35331,1109.33067,-74.18771\r\nimage_005.jpg,pushups_up,375.83936,313.35629,-502.31887,387.82251,302.026,-464.02546,394.68114,303.004,-463.83184,401.65214,303.86776,-463.81261,367.67232,300.87194,-463.91395,360.7874,300.59753,-463.7956,353.89977,300.48565,-463.8164,410.43686,320.98095,-241.17201,345.07944,315.8696,-241.46927,387.95861,336.50368,-421.4659,361.70728,334.47681,-421.65874,446.37355,429.19228,-107.95886,294.75187,419.80469,-128.71183,529.86903,505.77477,-387.55411,197.68174,481.92146,-373.07104,520.69964,392.50252,-817.16681,217.35855,382.82845,-731.18954,526.43201,361.06827,-907.13863,217.43679,354.74575,-816.50799,513.75654,352.14745,-887.72001,231.36727,349.84509,-805.13134,505.28927,367.93774,-821.76842,237.74224,364.56451,-736.64982,406.65175,677.26006,14.1543,316.09908,673.90923,-13.74758,416.68787,869.43611,16.64847,296.89771,872.22717,-32.13655,423.55378,1056.34499,269.5841,270.93502,1051.90186,206.88512,412.23209,1085.61081,278.6162,269.92502,1076.7173,213.0871,454.91894,1107.50107,19.652,269.07307,1109.37637,-46.48945\r\nimage_006.jpg,pushups_up,388.5962,323.95428,-281.72901,396.42777,309.80274,-243.76864,402.65475,310.64121,-243.64363,409.11111,311.43488,-243.61651,378.32141,307.41425,-266.12614,371.38061,306.23203,-265.91,364.43902,305.27527,-266.33646,409.88208,321.31302,-27.26043,350.68273,313.37055,-133.40826,397.15692,342.70306,-201.56317,371.95967,339.38995,-231.24176,415.04575,422.55615,129.03701,298.31618,392.46407,-114.56428,430.95961,515.6131,27.97329,191.37267,404.71405,-332.98407,445.95279,422.31098,-226.29479,252.50579,317.36231,-512.18455,454.98422,401.12152,-283.96546,266.76769,294.6571,-553.18962,451.4019,384.71714,-270.48496,274.15695,289.36054,-541.46941,442.50752,394.04156,-228.84641,271.87373,301.66538,-509.62348,364.3695,668.99857,129.28102,299.71317,666.34354,-129.04263,359.26214,860.49026,218.57306,285.48956,866.80161,-185.39134,353.32442,1042.94418,384.41156,231.90489,1071.27701,-250.78403,332.84686,1077.92946,390.28957,201.17368,1101.77124,-268.30651,429.65511,1085.89966,263.13925,306.14096,1134.59862,-457.85978\r\nimage_007.jpg,pushups_up,323.20328,285.84431,-96.46035,338.33775,268.24894,-85.96874,345.80841,268.05454,-86.03848,353.38324,267.7425,-86.27932,320.43169,269.30592,-62.13154,314.67738,269.32159,-62.31236,308.802,269.51107,-62.27864,372.15239,278.99567,11.02063,313.2539,279.32102,127.86193,341.9396,305.55639,-59.97322,317.45008,305.92602,-26.3518,423.83221,364.45648,-3.51043,295.98285,391.92078,271.03293,503.38212,399.6777,-182.27827,294.88967,499.01623,241.43739,449.36968,278.22796,-298.12342,270.04096,405.09872,83.94163,446.84983,240.59345,-338.09667,264.75074,379.76738,64.74276,434.38003,240.48244,-313.2409,260.61793,366.34201,41.58017,430.48144,257.4021,-294.90636,268.0243,377.09072,68.53008,383.34902,643.52753,-122.81052,310.85101,646.9281,122.44613,390.71426,860.89157,-196.22604,312.60603,853.14621,76.89488,413.85565,1076.90353,-236.99683,329.61077,1053.5701,125.28886,430.82935,1107.76756,-250.79265,350.20761,1090.75516,120.89811,359.90967,1135.82176,-426.68159,252.24257,1097.14798,4.47426`;\r\n\r\nexport const data2 = `image,name,x0,y0,z0,x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4,x5,y5,z5,x6,y6,z6,x7,y7,z7,x8,y8,z8,x9,y9,z9,x10,y10,z10,x11,y11,z11,x12,y12,z12,x13,y13,z13,x14,y14,z14,x15,y15,z15,x16,y16,z16,x17,y17,z17,x18,y18,z18,x19,y19,z19,x20,y20,z20,x21,y21,z21,x22,y22,z22,x23,y23,z23,x24,y24,z24,x25,y25,z25,x26,y26,z26,x27,y27,z27,x28,y28,z28,x29,y29,z29,x30,y30,z30,x31,y31,z31,x32,y32,z32\r\nimage_001.jpg,pushups_down,363.15223,558.11394,-291.7674,373.38623,544.31175,-262.41804,380.09046,544.76105,-262.4367,386.95284,545.09216,-262.58377,354.11879,543.94543,-261.53182,347.03212,543.78681,-261.55752,339.93234,543.76293,-261.56942,394.68731,557.25464,-125.16317,330.56793,554.82719,-116.74658,374.14421,579.28688,-243.61094,349.57355,578.37616,-241.1108,435.30763,641.01059,-40.99875,278.47196,637.82948,-53.91264,539.03998,706.97815,-140.59499,178.91034,701.51543,-203.90711,521.83074,608.38997,-218.36378,207.79137,595.36888,-346.11811,522.94984,571.68327,-248.99633,209.75153,559.44633,-372.70182,513.34502,563.94081,-209.11366,221.59901,551.90041,-338.54302,506.15523,583.11409,-208.67684,228.81723,570.67131,-337.5934,403.47867,830.72227,2.17299,310.28614,828.7307,-1.70841,484.62701,917.30721,-369.85285,246.05951,909.46251,-324.76713,433.34233,1063.26744,-108.44239,272.77468,1046.0112,-87.77368,407.82989,1082.3027,-90.57781,290.0899,1066.3662,-71.23412,471.69164,1130.12474,-245.2884,241.58294,1106.0482,-217.99231\r\nimage_007.jpg,pushups_up,323.20328,285.84431,-96.46035,338.33775,268.24894,-85.96874,345.80841,268.05454,-86.03848,353.38324,267.7425,-86.27932,320.43169,269.30592,-62.13154,314.67738,269.32159,-62.31236,308.802,269.51107,-62.27864,372.15239,278.99567,11.02063,313.2539,279.32102,127.86193,341.9396,305.55639,-59.97322,317.45008,305.92602,-26.3518,423.83221,364.45648,-3.51043,295.98285,391.92078,271.03293,503.38212,399.6777,-182.27827,294.88967,499.01623,241.43739,449.36968,278.22796,-298.12342,270.04096,405.09872,83.94163,446.84983,240.59345,-338.09667,264.75074,379.76738,64.74276,434.38003,240.48244,-313.2409,260.61793,366.34201,41.58017,430.48144,257.4021,-294.90636,268.0243,377.09072,68.53008,383.34902,643.52753,-122.81052,310.85101,646.9281,122.44613,390.71426,860.89157,-196.22604,312.60603,853.14621,76.89488,413.85565,1076.90353,-236.99683,329.61077,1053.5701,125.28886,430.82935,1107.76756,-250.79265,350.20761,1090.75516,120.89811,359.90967,1135.82176,-426.68159,252.24257,1097.14798,4.47426`;\r\n\r\nexport const data3 = `o1.jpg,squating,106.80048,34.47031,-63.30905,111.08403,30.20084,-65.04016,112.75751,30.42106,-64.99363,114.45593,30.62094,-65.02521,108.14661,29.45228,-54.86711,107.60078,29.06162,-54.85473,107.06157,28.73923,-54.84546,121.59042,33.05041,-61.57337,112.17271,30.29487,-18.01614,112.18522,40.21121,-62.38005,108.07247,39.22904,-49.81499,136.48835,55.31784,-84.27127,114.18428,56.81563,12.12642,113.01489,84.54714,-90.44541,93.66347,83.13685,-32.98839,90.45939,62.77487,-60.63608,86.55522,64.30551,-119.66691,84.16194,56.25971,-64.87558,83.4364,58.68065,-128.87726,90.97865,53.60297,-63.58022,87.13465,54.37157,-122.93633,93.97997,56.40652,-58.40422,89.53342,56.8056,-119.57689,163.03108,99.1309,-23.49613,145.25194,100.20056,23.57903,138.11274,114.76369,-131.21746,104.32602,107.49742,-25.9767,155.48392,156.63026,-89.85549,120.12567,144.95176,24.57856,161.11963,163.94229,-88.75899,127.93129,150.79136,28.61469,142.07594,168.48554,-130.18889,101.85666,161.19504,11.42795\r\no11.jpg,squating,84.20628,35.13723,-61.77903,90.72536,30.87953,-65.18787,92.6352,31.46275,-65.17376,94.5839,32.01981,-65.1825,87.56562,29.40339,-50.54447,87.08938,28.76536,-50.50339,86.65191,28.19328,-50.48732,103.3347,35.95787,-61.97879,93.60708,30.22737,0.89371,89.8514,43.10594,-61.2706,85.41796,40.88411,-43.04262,116.5824,67.28923,-95.63442,96.43509,63.20129,44.91227,84.84546,109.0707,-75.77588,68.27676,96.69089,-18.87566,61.93619,69.6952,6.41383,60.65309,64.73579,-125.76583,53.92408,60.34308,4.0899,55.06039,56.86283,-135.82301,63.09968,57.74525,1.26183,60.75818,51.92737,-122.20826,67.66329,61.40869,8.42642,64.63241,55.11699,-123.68462,145.03176,129.5456,-43.9138,127.98327,124.61469,44.09992,98.47812,142.73935,-176.94892,68.61176,130.16422,11.8473,133.16661,193.66128,-143.97199,97.7339,173.5435,61.18599,146.00294,201.34616,-140.98648,109.84825,180.60149,66.58796,112.51381,211.96695,-170.84155,74.66496,189.65798,60.03865\r\no12.jpg,squating,212.48836,22.73755,-20.15093,215.64497,19.75766,-26.25563,216.2742,19.95661,-26.22698,216.93542,20.13961,-26.24447,215.61529,19.41786,-15.67893,216.08259,19.37393,-15.6523,216.59678,19.38996,-15.62264,222.51749,23.05096,-38.95956,222.11124,21.88122,8.11212,215.34989,27.72584,-24.69029,214.91709,27.30741,-11.0505,228.03485,45.72816,-64.25393,231.57566,45.877,45.70767,200.02323,64.52841,-52.40669,205.11329,62.00552,37.85608,183.94267,49.70307,-7.09492,185.74822,51.31555,-0.12403,178.3239,45.75937,-15.73518,180.30214,46.93577,-4.7389,182.8626,44.08018,-18.5897,182.37115,45.37141,-6.89375,186.22865,46.10445,-7.35715,184.68769,47.67186,-3.41677,261.4157,94.34427,-36.59278,260.88172,90.94704,36.76409,213.91562,104.31728,-46.09505,219.2637,96.87042,61.75744,237.76835,143.73888,-19.11962,230.31816,136.72148,90.93211,247.41469,149.38432,-16.43895,237.51305,142.46524,93.45399,221.4612,153.25635,-16.7964,213.55094,148.87085,96.45278\r\no2.jpg,squating,117.16273,33.24648,-42.52562,120.32512,27.61915,-53.25678,121.65438,27.37519,-53.31002,122.99364,27.09385,-53.31162,119.19046,27.35755,-37.5107,119.41221,27.04412,-37.49015,119.61392,26.77791,-37.55611,131.95769,27.38407,-78.22442,127.89779,26.90365,-7.7021,123.8541,37.96297,-49.68686,121.75092,37.7696,-29.41386,164.15029,51.11824,-88.27206,135.76041,51.80562,27.30691,175.79087,93.5541,-66.50332,148.69571,80.34063,13.18824,150.47459,102.39747,-20.58574,133.65494,66.88294,-52.29868,145.16206,106.66099,-26.66811,130.17734,64.10366,-62.02871,142.12735,101.73919,-27.97592,127.0501,62.34238,-62.53185,144.79338,100.06361,-18.95238,130.48091,62.75167,-54.5459,184.08331,103.31028,-33.22769,160.29437,101.49394,33.44368,157.723,121.90728,-140.20993,106.67333,106.92862,-27.57196,180.16778,158.16838,-62.18893,141.40411,153.15356,-52.70205,186.61934,160.89092,-53.4002,151.04179,157.62285,-54.93851,166.01371,174.84104,-67.90297,134.29979,168.83592,-73.81393\r\no3.jpg,squating,157.23022,33.69538,-89.07686,157.54488,29.65718,-82.49223,159.00072,29.50525,-82.46887,160.52155,29.358,-82.46356,152.99461,30.02804,-88.00667,151.06274,30.07776,-87.98186,149.12868,30.16512,-87.91544,159.72615,31.35709,-46.44618,144.30628,32.47971,-68.50899,158.97868,38.1571,-75.92642,152.84725,38.52444,-82.15752,160.13399,50.87556,-15.22684,133.40465,44.5503,-86.49105,181.52391,57.55171,-62.46494,148.3275,63.25499,-119.9932,203.95666,58.41381,-140.17444,177.30888,60.0928,-136.68359,212.97812,61.06781,-152.45415,183.75773,61.46328,-150.15741,209.80618,59.30279,-159.06871,185.57069,58.10648,-150.45927,204.85643,59.32134,-146.40898,182.73863,58.84918,-136.7657,128.3768,88.6878,21.88435,111.76999,86.08527,-21.87222,159.96525,106.49947,-36.26098,140.48785,107.26394,-70.01358,158.4385,149.59887,-33.65703,140.84788,151.14452,-55.21913,151.48333,157.00546,-35.20242,135.88765,158.19016,-54.71405,176.22596,162.69301,-56.85903,157.42357,164.90754,-82.99287\r\no5.jpg,squating,173.65545,39.623,-94.91475,176.57171,36.7308,-96.55833,177.68723,36.67117,-96.55032,178.80429,36.59163,-96.53569,174.61187,36.89158,-87.07591,174.27478,36.87558,-87.02864,173.94857,36.92018,-87.02529,183.77681,37.02733,-94.38764,177.61665,37.20556,-52.21227,177.43361,42.05161,-93.98607,174.92848,42.14626,-81.80406,194.07521,48.65847,-111.14329,178.73765,48.07492,-28.79139,170.4874,53.86244,-142.83152,156.46019,52.57323,-31.36029,148.31372,55.55296,-147.83669,137.39522,53.79056,-52.76074,142.94902,55.61512,-162.45549,132.7803,52.72801,-55.51463,144.05789,53.0048,-158.34677,132.08896,52.09485,-66.41108,146.10033,53.45283,-146.81672,134.09628,53.02755,-58.54097,210.10145,80.24407,-23.73668,198.662,78.00903,23.81889,192.50205,90.58843,-98.8991,173.21775,81.12267,-8.83752,208.8909,108.23388,-35.47178,189.574,103.62578,33.30425,213.97021,111.06044,-30.33405,195.28002,107.40315,36.42526,199.82445,114.18126,-46.70589,178.52507,110.07855,28.79962\r\no7.jpg,squating,148.05253,57.4314,-63.25215,150.74704,53.95519,-65.89691,151.68092,53.96111,-65.88221,152.6222,53.96023,-65.91474,149.50848,53.84648,-55.4506,149.4638,53.74777,-55.43017,149.44635,53.71237,-55.40321,157.07499,54.92555,-70.01902,153.01481,54.27996,-24.40478,151.02212,60.72365,-64.71463,149.37726,60.45456,-51.52818,164.77591,69.55331,-90.05507,155.0169,70.09903,2.98286,140.02211,73.08929,-124.79258,133.41429,73.43147,3.60829,113.35871,68.67862,-121.2405,112.39085,70.00867,-18.6323,106.88498,66.32716,-134.31904,107.77336,66.71972,-21.55243,108.47471,64.06904,-128.94934,106.19901,67.19248,-30.76402,110.54528,65.54584,-119.75481,108.02041,68.89732,-24.24295,188.71072,105.9502,-27.3138,179.44151,103.86887,27.42966,161.47122,122.28378,-89.96405,151.12289,116.68616,-5.49433,179.10463,147.01194,-36.36582,165.21522,140.4472,42.01984,184.58021,151.24538,-32.82811,171.13932,144.45733,45.60062,167.22605,153.07106,-55.13201,150.60556,148.52217,34.05903\r\no8.jpg,squating,136.17858,35.5487,-106.63845,139.53704,31.11885,-97.30332,141.56669,31.20918,-97.29442,143.6109,31.26077,-97.27449,133.65759,31.01398,-97.82558,131.65547,30.91133,-97.78464,129.6505,30.84839,-97.78317,146.47232,33.46647,-46.24019,127.32471,32.7801,-48.93202,139.78396,40.72022,-87.97456,132.71285,40.4007,-88.75473,159.95456,57.95212,-26.61621,114.45509,56.05333,-23.59001,163.39345,92.91958,-95.45438,112.4371,92.92029,-101.32269,144.15606,66.69835,-162.63607,131.64422,67.35894,-183.69721,139.47467,59.69003,-177.85114,135.97105,60.19402,-197.6401,140.77057,54.05795,-163.84991,134.52232,55.29584,-187.607,141.30923,56.84509,-158.69463,134.97745,58.53185,-180.85206,151.09829,107.82898,0.22035,123.5237,108.47858,-0.08158,179.38463,110.43335,-140.00595,96.97552,109.31575,-139.61118,180.37606,155.47162,-80.38055,95.21127,153.36054,-80.46697,176.7058,164.97966,-76.99081,98.97986,162.02381,-76.67069,192.39957,165.20337,-124.28146,82.01544,163.51166,-124.02349\r\no9.jpg,squating,112.63996,40.88288,-51.39324,117.57576,38.66903,-54.95888,118.85648,39.14376,-54.90379,120.15752,39.58785,-54.90805,115.92283,37.55077,-41.97841,115.97235,37.21051,-41.92598,116.05034,36.94844,-41.88143,126.26585,42.68041,-58.01296,120.90935,39.06303,-1.40735,115.62211,46.62076,-53.26516,113.49448,45.10764,-36.97675,130.59164,63.00999,-88.4068,119.90151,63.94755,33.89881,103.24269,76.50107,-96.66753,90.50404,75.85512,19.86659,88.43752,52.15982,-75.22232,86.23141,53.5619,-15.68533,84.42375,44.25023,-87.69351,84.94772,46.42863,-20.00955,90.27407,43.51983,-87.50669,88.71031,43.97476,-17.7863,92.49168,47.35327,-74.69912,89.57877,46.73063,-16.91225,156.38731,104.97071,-31.65179,146.31451,105.95881,31.82503,127.86599,118.54451,-150.68562,111.19492,113.06058,-16.14741,143.88237,156.35789,-116.74867,126.86345,146.46896,39.74693,148.86668,164.43112,-115.37269,134.03096,152.18067,44.38381,129.55681,163.37181,-155.10964,111.09086,158.65194,20.98036\r\np15.jpg,squating,595.6765,321.37368,-444.70467,606.17882,305.6413,-439.76856,611.98009,305.14041,-439.80679,617.73956,304.59477,-439.8793,593.60882,306.5492,-410.90336,589.87846,306.43893,-410.59235,586.21468,306.47085,-410.35172,634.80865,308.05546,-361.6703,594.52118,309.65854,-235.66324,611.00334,333.3312,-413.88039,593.66814,333.79696,-377.7005,683.15742,365.83447,-358.97682,589.89552,367.61889,-110.93369,659.92844,472.2259,-461.25366,538.53249,472.40301,-334.98734,599.46587,393.59422,-534.06059,561.31908,387.58959,-660.25131,579.92188,376.33997,-571.85841,560.04967,366.89452,-706.18301,597.60155,359.62531,-569.0329,574.9334,352.83202,-663.07938,606.50551,364.08777,-528.20045,580.69969,361.29802,-649.692,739.04434,487.92309,-86.47325,683.37196,485.74531,87.25597,674.40926,526.80701,-567.58644,558.91468,512.53834,-178.34332,733.17238,645.68483,-342.80655,594.83509,625.71825,57.9483,752.50763,665.77217,-332.60754,615.28801,645.11998,75.92902,698.10181,691.51443,-520.79082,536.27472,669.38805,-29.22124\r\np16.jpg,squating,592.84241,369.9643,-404.78287,603.65185,355.31995,-404.36481,609.26277,354.84177,-404.3536,614.86561,354.33891,-404.41826,591.99059,356.42155,-376.17657,588.80562,356.41369,-375.92819,585.65624,356.59748,-375.76077,633.75652,358.02349,-347.98851,596.25298,360.05759,-224.14759,609.07909,381.88756,-381.97643,593.29571,382.5194,-346.04721,685.49316,414.60935,-333.31882,592.63283,414.08595,-118.15932,659.09561,521.28273,-363.77335,535.21706,514.15853,-315.97824,599.30683,451.10614,-364.16,557.93591,436.4336,-609.19914,578.71204,436.59303,-386.2402,559.72878,417.93014,-648.00919,595.63671,419.00311,-391.5377,571.95122,401.83692,-610.6842,604.55116,423.15358,-360.35923,576.81782,410.2476,-600.96466,730.88303,535.22979,-71.88916,672.53716,527.43962,72.33239,692.56798,543.0251,-522.29881,557.44068,513.99249,-106.96632,740.98564,660.86519,-299.88918,598.77892,617.99581,91.09348,756.47339,680.79649,-289.82525,620.98461,637.38002,103.15295,714.30962,701.39491,-463.61759,543.27873,660.33192,14.02757\r\np17.jpg,squating,597.27898,326.96304,-392.2699,608.13789,311.4441,-390.09796,613.79211,311.0675,-390.21416,619.40941,310.64828,-390.37689,596.17195,311.90342,-361.68858,592.69814,311.6737,-361.38988,589.27956,311.56424,-361.11076,636.47789,313.8812,-326.89636,598.26283,314.03387,-203.54527,612.29164,339.04034,-367.28355,595.99678,338.89767,-331.76201,684.76173,371.51496,-321.83327,593.00972,371.64044,-89.94826,660.02106,479.84947,-361.81942,542.67109,480.68082,-304.21307,602.43553,402.41032,-367.92461,562.72583,402.00687,-619.60381,581.67,387.4611,-393.62816,561.61308,382.08561,-663.32115,599.08569,369.67393,-397.13089,574.11774,367.15794,-619.92809,608.50109,374.00598,-362.81048,580.65685,375.98137,-608.73543,736.63475,496.48509,-80.42118,680.51994,491.58196,81.10788,670.57289,540.49087,-504.65008,561.47491,514.89851,-142.85204,734.2382,652.56184,-294.48877,590.75752,623.85173,87.42655,754.62967,670.07233,-284.19861,609.68578,643.49782,105.39665,702.43065,700.19762,-441.35254,533.80424,663.8654,21.79705\r\np23.jpg,squating,686.08505,231.71629,-634.03442,693.06129,220.34317,-600.76183,698.26698,220.29534,-600.71064,703.60962,220.17857,-600.65918,677.74803,220.8865,-603.58131,672.14569,221.03477,-603.58288,666.51772,221.26763,-603.4552,710.31487,229.60243,-427.08599,659.02138,230.3326,-433.09353,695.60814,247.38615,-571.82243,675.81741,247.80324,-573.35926,746.75621,301.13834,-306.62914,619.1338,301.11347,-334.99165,780.62492,399.71193,-480.43377,587.18262,401.37172,-540.2282,714.75029,367.21231,-754.81865,652.83615,374.6222,-792.8009,695.27878,361.05988,-818.82874,672.78664,369.88752,-843.25745,691.87492,347.10308,-794.44672,672.90863,354.32796,-825.55946,695.41824,350.74097,-748.99643,670.75432,357.20258,-787.16942,711.51749,429.82605,13.30361,633.42232,428.20214,-13.43443,781.50955,526.0717,-347.57046,586.623,556.38847,-236.08103,756.41968,597.10616,70.08752,600.97404,595.96942,198.93726,743.12904,599.86566,106.89968,609.88838,597.69891,238.38953,769.09019,660.70726,-43.26433,586.5097,649.86418,118.73951\r\np24.jpg,squating,680.10719,265.95373,-704.35371,688.43819,253.58726,-672.16225,694.27521,253.79195,-672.19078,700.1889,253.9143,-672.20695,671.91628,253.4718,-670.52048,665.9716,253.42107,-670.36232,659.981,253.4539,-670.11162,708.34175,263.67095,-506.16356,652.8698,262.76177,-496.86619,691.19469,282.57954,-645.49316,669.21837,282.10601,-642.15126,746.8914,338.5348,-394.58607,614.2384,336.11044,-397.23312,787.54585,435.45878,-579.15001,578.67073,438.60606,-612.69798,716.51123,408.25968,-798.65868,654.07341,403.35467,-854.64935,695.51033,400.96622,-848.41805,678.1736,395.66776,-900.55031,693.59383,386.78158,-809.26231,677.74521,379.05175,-863.64685,697.14798,389.48791,-784.64729,674.06723,383.46667,-841.26373,714.88579,450.17806,1.69486,637.99751,447.59498,-1.5968,777.09579,526.52123,-429.94469,589.36943,537.08626,-399.263,758.7294,596.02942,-12.58143,597.73399,596.66435,18.77478,749.24957,600.43141,23.85962,603.77846,603.32026,53.35342,768.34946,655.36391,-134.84393,586.77132,649.91499,-113.16201\r\np25.jpg,squating,679.02855,292.85821,-509.25457,686.76758,278.35937,-478.22083,692.87514,278.0889,-478.3149,699.00772,277.7336,-478.38417,670.09087,279.40988,-477.70126,663.91586,279.80998,-477.72663,657.70035,280.33852,-477.7618,708.00232,286.33274,-323.06099,651.47934,289.57212,-325.45357,691.55617,308.55083,-453.92929,669.07722,309.7513,-454.40281,745.80063,356.97001,-254.07209,619.0799,365.59728,-240.84045,782.75528,456.41752,-396.90037,587.80842,476.27359,-394.18579,701.8605,432.08349,-542.42054,659.19868,429.62165,-592.54723,677.89757,427.59716,-581.44238,685.2874,421.42632,-634.82094,677.22099,410.29584,-542.85786,681.74088,398.73045,-605.22167,681.83586,413.05062,-529.25163,677.5528,403.47011,-580.64495,729.10835,488.44026,-4.40457,656.50772,492.30324,4.61773,762.74033,508.85917,-443.20122,586.94714,534.87767,-333.21316,752.07184,583.24481,-46.73686,600.39467,599.92682,47.14433,746.12732,585.9492,-8.41856,610.98793,606.98364,82.33635,758.33473,645.37923,-130.80896,581.20399,653.03541,-51.85927\r\np26.jpg,squating,683.97858,277.82566,-769.84489,692.49565,264.62185,-740.93697,698.30574,264.90576,-740.97244,704.19518,265.13044,-740.97725,675.77934,264.161,-741.75804,669.66118,263.91538,-741.63063,663.49007,263.74172,-741.3726,710.66444,274.11552,-574.3457,654.30122,271.71305,-575.89882,693.50967,294.21496,-709.50943,671.45752,293.23291,-709.31374,744.41811,342.7514,-452.70996,612.34474,344.35993,-462.79137,782.42859,441.25772,-642.36267,578.56438,447.18025,-675.77705,715.44998,410.79786,-894.36066,644.81003,413.46591,-914.83078,695.8017,401.82594,-949.50943,666.44737,405.09218,-964.48288,693.89565,387.49393,-915.08064,664.72206,389.14098,-929.97383,696.58592,390.96857,-883.03482,662.24731,393.21038,-903.13583,710.12657,454.86797,6.19109,635.41664,452.18242,-6.15606,776.22826,537.71416,-409.32129,592.855,544.97475,-371.40289,755.13206,596.35931,27.49696,598.94482,597.97893,48.53744,744.63181,598.31822,66.18524,604.05479,603.53059,81.46582,765.21194,657.6219,-79.7117,589.91955,653.28132,-83.96811\r\np27.jpg,squating,685.6488,228.13653,-699.08279,692.57996,216.20064,-669.27277,697.75909,216.11622,-669.2218,703.04558,215.96025,-669.14642,677.6178,216.63445,-669.25919,672.21992,216.74912,-669.23225,666.78757,216.92307,-669.05739,710.22278,224.69146,-503.20557,660.24323,225.56567,-497.70359,695.60944,243.06946,-639.11507,676.05095,243.39184,-637.28523,748.60489,298.86671,-371.50532,620.11211,293.95942,-390.92655,783.39302,395.42318,-550.79243,577.13234,389.62579,-597.21458,715.06149,369.19607,-820.92422,647.03178,367.49795,-848.74046,694.75433,364.45569,-878.17436,667.50809,363.19247,-896.69632,691.08452,350.81773,-851.39252,669.88144,350.73895,-870.94757,695.35873,352.96371,-812.34825,666.86356,353.38668,-839.38301,713.21815,418.77926,9.76497,636.39538,412.76592,-9.88634,770.52444,521.10326,-292.262,593.78639,530.39636,-288.0596,759.44977,590.77289,98.10093,598.18413,592.21922,109.72951,748.52943,593.96742,131.31874,603.77098,597.9912,142.72665,773.15628,651.83769,-21.62992,586.32214,646.03352,-8.88187\r\np33.jpg,squating,635.09449,330.32337,-544.86382,640.02029,317.8831,-529.17645,644.04305,317.22971,-529.21059,648.04741,316.51004,-529.20948,628.17604,319.19236,-525.71667,624.18354,319.24167,-525.6316,620.16167,319.40522,-525.70259,653.52577,315.55562,-403.88161,616.15776,319.74689,-386.23077,643.12057,338.04681,-495.78785,629.91222,339.1269,-490.48935,686.92352,359.39852,-330.93754,588.5894,364.08468,-326.62979,692.35672,425.43727,-563.78242,588.41988,429.34381,-581.38161,653.33359,361.3514,-774.04007,622.41325,360.15248,-784.97353,644.20967,337.9802,-816.12465,626.04561,337.00581,-828.8533,647.12219,331.58822,-787.19452,625.93567,334.56369,-789.83994,646.62834,340.07848,-765.55252,629.97856,343.48553,-773.71902,670.37117,470.4253,-1.75824,607.55669,472.37181,1.76921,726.23856,530.18947,-333.20263,564.07463,537.12261,-332.92549,721.20438,616.77873,-119.47271,570.70671,626.63385,-105.12169,713.34839,632.53767,-106.19232,579.4342,642.34404,-91.03073,739.77951,647.2887,-248.24238,552.06398,658.63084,-234.74718\r\np34.jpg,squating,642.69012,385.74054,-518.84941,647.27402,371.98445,-507.31201,651.42876,371.16571,-507.34104,655.54352,370.28492,-507.24674,635.5835,373.08476,-502.61715,631.52351,372.87108,-502.5275,627.42958,372.77714,-502.55943,662.0163,366.86637,-388.09284,623.52135,370.83733,-366.86436,651.27129,391.35567,-470.8604,637.77504,392.22659,-464.75124,693.96729,402.50525,-302.08401,596.36864,405.06283,-274.92001,702.07375,476.10528,-499.05312,590.03044,483.28557,-465.3566,661.23505,419.00667,-670.42938,626.35082,423.19692,-639.86866,649.9408,397.96386,-706.41434,632.54066,403.05851,-677.69478,654.92409,390.34389,-675.85876,630.89577,395.91516,-642.44377,654.76295,397.62723,-660.2552,633.63976,403.49007,-628.23742,676.45432,502.4783,-5.03517,618.00404,503.4808,5.28988,726.63986,523.20654,-415.16865,576.7765,535.19245,-383.36391,722.44576,620.06081,-212.17264,585.76672,624.53688,-194.55244,714.64539,635.49458,-199.4166,594.69933,639.52013,-183.38207,739.6904,652.33473,-355.30434,566.76872,656.11304,-333.36479\r\np35.jpg,squating,656.25824,398.56948,-536.05835,663.8237,385.47498,-521.61324,668.59932,385.45472,-521.67824,673.35831,385.36717,-521.57097,650.94589,384.73473,-519.30645,646.42914,384.00478,-519.22035,641.87843,383.35728,-519.16637,680.60577,385.54025,-398.0814,637.169,382.99018,-388.1361,664.17946,407.60908,-487.67918,648.96255,406.46779,-484.66991,708.02856,425.8905,-295.39606,606.10584,423.71109,-300.33787,722.45674,504.4836,-479.19743,595.48775,506.62911,-477.80342,679.52896,446.51008,-646.24031,642.82089,445.68551,-630.11433,669.15863,424.59549,-685.99693,654.24225,423.77435,-666.42532,672.15569,413.96012,-645.33287,649.88564,413.64757,-631.70826,670.04997,421.99435,-632.5515,651.86325,422.31269,-618.04192,684.26552,515.05683,2.84822,624.25488,514.23934,-2.61592,745.87181,532.11598,-377.61551,573.92738,535.79224,-371.28006,722.84256,624.98517,-121.95961,574.32976,623.20363,-122.90755,709.35638,639.01454,-103.2515,582.26814,638.68714,-106.01632,742.52274,664.64032,-242.1199,550.7888,657.8279,-247.96379\r\np36.jpg,squating,669.54849,343.05653,-622.20287,677.44095,330.60548,-605.48271,682.10243,330.59702,-605.5534,686.74973,330.52988,-605.4599,664.33525,329.96108,-602.57923,659.99207,329.37791,-602.46887,655.60333,328.86256,-602.39185,694.23668,331.77402,-465.24124,651.42075,329.69842,-453.43166,677.52724,352.85786,-567.81471,662.29485,351.94226,-564.16008,723.52448,379.80732,-351.408,619.46209,377.14657,-356.38203,727.72308,458.07246,-554.56757,611.76838,460.3953,-577.99873,692.63718,400.74233,-787.09221,658.2412,401.31319,-803.56079,683.9888,379.95426,-840.79956,670.57808,381.08191,-855.18021,687.64206,369.61849,-809.7216,665.88791,372.50253,-824.00078,685.91469,376.95499,-778.54744,667.64343,380.69305,-794.46594,698.28163,478.46382,4.36845,635.34077,474.64641,-4.17878,745.91087,537.72081,-394.02721,585.55004,534.7024,-384.24347,725.16106,619.49342,-76.05581,577.64381,623.75466,-87.3141,714.76204,631.11125,-52.54152,584.31519,638.91987,-67.49612,735.24605,659.2817,-205.04248,554.15699,659.50383,-233.53544\r\np6.jpg,squating,599.37267,336.97965,-461.41644,609.26495,321.6778,-455.51044,614.94926,321.23923,-455.47321,620.60833,320.76038,-455.50549,596.84074,322.42714,-429.01932,593.06374,322.30286,-428.73173,589.35436,322.33805,-428.51364,636.53801,324.44801,-371.45294,596.44196,325.78209,-256.30619,614.01543,348.58767,-428.29082,596.58222,349.04893,-395.21305,681.76216,379.69274,-369.24965,590.77148,382.79749,-126.81064,663.21259,483.02297,-490.15198,538.13301,486.74107,-361.68606,600.91438,408.60326,-577.33959,560.74749,403.78807,-692.87323,580.58311,392.20977,-614.27906,558.7426,383.80763,-737.69402,597.80067,375.86224,-609.43016,574.63024,369.60248,-695.17708,606.90102,380.72536,-571.17516,580.6139,377.76884,-682.68051,737.45293,502.55915,-84.64909,683.24661,499.08618,85.27819,661.7543,533.64625,-566.77635,555.42747,513.74813,-172.00756,729.71405,650.84973,-331.47011,591.53503,622.07294,69.66469,751.31393,669.46589,-320.14786,612.0295,640.22278,87.63118,697.75467,697.64368,-503.32561,533.83202,666.77819,-15.72393\r\np7.jpg,squating,597.91046,352.44091,-452.69817,608.95164,337.18041,-449.52744,614.7295,336.99544,-449.55532,620.49553,336.76256,-449.63207,596.64009,337.12333,-423.04108,592.93282,336.74917,-422.73922,589.25835,336.53275,-422.46906,637.1228,340.32452,-376.9854,597.49321,339.19589,-261.49265,612.70653,364.65833,-423.34625,595.65887,364.13373,-389.82376,686.99409,397.68894,-361.71253,589.04869,393.67207,-143.6526,678.31093,502.59134,-474.01184,534.13197,499.58241,-389.32537,610.73891,422.92128,-568.7188,563.39363,419.15022,-719.76021,587.34558,408.95594,-600.25005,566.51569,399.80081,-760.51537,602.97474,388.0917,-597.3101,579.10961,384.86373,-714.67613,612.761,392.6154,-562.30724,584.58427,393.899,-706.93504,730.54703,517.32628,-80.04073,672.67647,511.15716,80.61776,664.48936,545.19752,-550.6953,551.32599,520.11724,-147.75492,736.01341,652.23877,-315.79248,597.13062,621.27763,66.94612,757.75467,668.49669,-303.6475,616.74347,638.14357,82.11263,708.63434,698.35925,-473.87321,550.9914,661.73598,-11.64014\r\np8.jpg,squating,596.93352,294.27923,-516.56654,608.86242,279.8368,-508.95657,614.71252,280.03181,-509.0023,620.54344,280.17999,-509.14673,596.05171,278.9701,-480.98282,592.21245,278.35952,-480.58296,588.44246,277.87406,-480.15789,636.99982,285.54647,-417.37556,596.20094,281.68383,-296.77755,611.2965,308.18732,-480.97305,593.59608,306.41876,-446.325,686.20346,345.82156,-411.11397,586.40369,343.58029,-161.86365,667.20772,449.85705,-554.56947,530.62157,455.20246,-407.23049,597.9528,371.43677,-680.77065,554.61456,375.63496,-747.94296,575.61573,357.15922,-722.88658,554.95453,355.42853,-792.51343,591.72009,339.21844,-718.66219,569.75616,340.30945,-747.47887,602.20123,343.58505,-673.39668,575.50915,350.08643,-735.16273,739.41757,477.99059,-87.68503,678.60054,472.69883,88.51455,665.37109,539.78431,-598.61591,553.09517,514.9322,-208.32941,742.45293,650.34346,-311.66355,591.0025,627.55095,117.56816,766.81549,666.78999,-294.37967,611.5625,647.45882,143.6949,708.24806,701.3329,-472.85995,535.23872,669.52241,44.09976\r\npexels-cottonbro-4761339.jpg,squating,709.71308,1210.41738,932.37904,686.93762,1196.44863,954.86248,684.86342,1189.25121,954.37545,682.40248,1181.89284,953.7148,693.75716,1212.79309,1019.55689,694.00862,1217.7103,1020.19622,695.3275,1222.15641,1020.36875,695.48729,1171.42899,1012.8834,710.06247,1227.52154,1307.49997,740.94379,1203.24115,949.78806,744.76245,1224.66924,1032.90196,773.55483,1109.75229,759.39566,903.07272,1319.90002,1392.83678,529.05791,978.74831,679.85203,810.68015,1211.0235,1573.09917,410.20653,857.03504,922.02803,684.34678,1078.93058,1564.222,370.7687,819.97787,928.32681,672.3736,1009.30748,1576.7856,386.89516,822.75536,898.98761,637.61525,1029.91629,1550.06416,411.07934,839.217,925.33659,637.24275,1054.92284,1564.67998,1516.65683,1235.71664,-361.84411,1567.20632,1368.32765,363.19359,988.66133,1563.93318,-625.72267,1147.0747,1722.518,555.79059,1286.83835,1942.27302,-1042.32594,1291.69019,1941.85515,88.74328,1405.69731,1955.30256,-1070.21279,1367.60709,1921.59352,22.72207,1188.19528,2149.91813,-1139.31864,1220.57142,2104.12837,-40.85912\r\npexels-cottonbro-7690845.jpg,squating,1759.61181,2208.41276,-1434.55608,1824.90093,2132.5726,-1335.88098,1860.59635,2130.48749,-1336.45681,1896.67402,2127.60138,-1336.30866,1740.54754,2140.04929,-1199.95653,1714.17821,2142.18259,-1199.73011,1687.4711,2145.02033,-1201.03436,1990.09663,2177.02607,-704.17512,1714.67025,2194.81468,-115.96848,1850.01863,2301.08035,-1214.65509,1736.91611,2308.15789,-1043.77192,2316.80998,2572.19597,-880.87714,1678.68176,2706.6785,518.37272,2338.84907,3155.92282,-1592.81436,1724.23955,3334.22432,-550.30749,1857.5145,3049.99014,-1919.3913,1555.00572,3063.01647,-2383.54455,1755.06606,3048.62548,-2166.42767,1484.04423,2989.71144,-2693.39494,1731.09199,2964.83683,-2014.45643,1468.63332,2906.95016,-2650.42288,1773.97547,2972.2452,-1860.96589,1527.5063,2923.82846,-2414.55865,2547.87986,3528.67882,-343.67871,2141.6209,3622.82793,346.40213,2612.18261,3700.25121,-3233.35006,1731.23007,3778.51415,-2324.79563,2795.68145,4583.22659,-1964.52405,2067.96318,4506.89684,-1290.60104,2840.17244,4697.99559,-1870.99823,2214.20631,4606.96488,-1217.62055,2714.83926,4945.87293,-2980.13513,1891.46145,4782.09619,-2178.97609\r\npexels-ivan-samkov-4164454.jpg,squating,2868.25542,3450.42526,-1538.03612,2815.98049,3414.78553,-1358.69822,2814.97776,3417.56573,-1358.73281,2815.07471,3420.40023,-1357.49402,2787.69648,3407.97915,-1577.19297,2767.37778,3405.46675,-1577.32985,2746.68888,3403.77222,-1577.68541,2723.14676,3444.75886,-557.31759,2624.06382,3421.56921,-1574.22879,2825.48685,3516.16144,-1245.65762,2798.15994,3510.62485,-1531.38075,2725.14454,3725.49239,-123.98595,2379.36415,3716.56154,-1623.82048,3113.29206,4061.00086,-969.96316,2747.78236,4154.98014,-1649.64527,3080.09357,3729.15742,-1934.83146,3030.01032,3765.27286,-825.7043,3133.51133,3607.18906,-2074.21099,3103.07903,3638.15918,-875.01902,3044.7644,3581.93221,-1901.2893,3057.99778,3577.56907,-825.89486,2997.71116,3641.27747,-1912.61478,3032.35126,3639.65695,-763.00365,2405.81032,4380.94543,387.27475,2136.18965,4386.15026,-384.78287,2476.34344,4723.24167,-588.49691,1857.69181,4735.93426,-2651.78398,2141.73592,5144.39515,147.98618,2055.52755,5218.34993,-1684.93638,2048.40132,5224.53629,192.70801,2078.96578,5256.72672,-1613.86061,2278.11407,5259.89076,-411.43986,2239.45387,5472.02236,-2424.47491\r\npexels-ivan-samkov-4164456.jpg,squating,2641.62773,3267.32117,-481.71006,2569.42438,3219.76433,-439.98996,2554.90833,3220.72987,-440.0328,2540.90282,3221.87914,-439.03995,2579.4874,3226.06487,-706.93916,2567.54017,3232.94749,-706.71594,2555.34721,3240.76738,-707.52446,2428.98125,3264.60643,98.16106,2444.77402,3289.50176,-1142.46481,2602.92166,3343.17578,-301.7412,2610.21601,3354.04664,-660.04938,2394.60869,3587.19097,702.80674,2365.52229,3754.58834,-1614.81276,2884.17961,3907.75183,923.90533,2906.54716,4202.17546,-1133.15347,2820.86571,3555.95492,901.56394,2849.19907,3614.30079,554.98519,2857.69947,3437.53295,1041.78875,2859.02256,3467.16299,557.43939,2709.0453,3474.00767,1229.23653,2709.24143,3474.33423,331.96792,2666.99728,3534.98571,961.52908,2690.0482,3535.28512,537.46969,1762.2398,4089.18594,766.4635,1660.17891,4254.66413,-765.05852,2402.80857,4176.07916,1944.62619,2458.27791,4342.45706,-998.64744,1955.34616,4656.60393,2093.70995,1998.93795,4921.96918,-403.04161,1816.07759,4738.57387,2148.36252,1872.99562,5013.78791,-339.21627,2209.61245,4813.12858,2432.18657,2295.09306,5038.38979,-59.31889\r\npexels-ivan-samkov-4164850.jpg,squating,2809.18859,1259.31752,-1409.95358,2765.15446,1172.81856,-1252.41565,2763.23319,1174.28698,-1252.37836,2762.80825,1175.81116,-1251.9769,2733.2445,1172.39371,-1551.0611,2705.03332,1168.91372,-1550.95523,2676.83289,1166.37422,-1551.60315,2632.77724,1224.45536,-360.01818,2509.94131,1204.44173,-1688.37804,2744.52859,1363.81303,-1079.85208,2698.91695,1358.41052,-1454.15165,2568.39253,1719.63222,394.00411,2095.58817,1682.45285,-1997.32713,2721.2279,2379.8881,-137.85004,2066.50241,2464.78117,-2083.42609,2991.47402,2208.66425,-1998.33068,2576.56978,2045.71153,-1587.75173,3085.05793,2167.87164,-2309.87842,2711.42034,1936.93253,-1808.9625,3043.14506,2065.15853,-2369.76215,2683.17566,1803.40012,-1816.845,2983.08602,2088.18429,-2103.506,2639.07698,1857.09167,-1579.24025,2048.52666,2735.811,799.74779,1724.82124,2780.12037,-798.5489,2847.34475,2832.94937,-374.97707,2438.44171,2900.22086,-2710.39272,2523.14666,3738.24735,618.76566,2060.57088,3821.60937,-1188.92459,2303.83418,3881.04971,687.93709,1884.79437,3938.50709,-1048.70496,2939.4091,4089.86486,245.97741,2360.9052,4156.79686,-1629.57193\r\npexels-julia-larson-6455803.jpg,squating,3736.80854,1475.46899,-2833.35203,3770.58971,1408.29945,-2662.01019,3798.85519,1405.11167,-2661.85284,3827.51763,1401.39139,-2661.10432,3685.77504,1415.99858,-2660.45451,3656.45456,1418.27309,-2659.91682,3627.04754,1420.96448,-2660.17771,3868.24,1432.22094,-1766.53254,3589.32817,1458.18818,-1749.04954,3791.18621,1548.05946,-2514.99993,3690.61661,1558.24459,-2504.40216,4073.96328,1822.82639,-1206.03642,3398.51046,1807.70373,-1252.17569,4231.69684,2352.81491,-2365.0766,3258.75056,2290.96603,-2477.66572,3982.8043,2114.2838,-3961.13241,3477.1353,2083.45461,-4086.05576,3912.5458,2031.30531,-4288.71775,3536.89957,2022.32742,-4414.59489,3922.09697,1946.9707,-4084.68282,3546.50223,1947.14689,-4244.72702,3916.23759,1988.38997,-3910.7641,3563.76421,1980.57711,-4047.51134,3897.36736,2488.42406,-1.61339,3493.41381,2474.27058,3.89708,4214.86223,2727.68259,-2500.79012,3216.51471,2712.04424,-2515.3724,4210.31499,3319.3059,-694.47733,3119.14694,3316.39004,-739.96,4173.74218,3411.77082,-568.24364,3155.64466,3413.53941,-629.14118,4284.953,3533.53453,-1586.25072,2992.68901,3540.44914,-1722.09871\r\npexels-ketut-subiyanto-4853705.jpg,squating,3899.46628,1369.71545,-2291.44353,3920.35568,1306.02753,-2053.64603,3944.00096,1310.98223,-2054.25847,3968.65511,1315.59062,-2054.1628,3837.88455,1293.18285,-2166.24409,3802.24693,1286.89837,-2165.96872,3766.60573,1281.45576,-2166.21119,3945.60778,1362.51295,-898.24471,3675.0108,1316.47146,-1471.25521,3912.9678,1471.76242,-1888.21203,3806.5846,1452.84629,-2048.57397,4035.6406,1818.09568,-419.0779,3288.71334,1709.20634,-1193.63737,4078.71616,2344.28763,-1711.59321,2884.73153,2211.88951,-2481.53508,4222.04161,1799.53063,-3494.83252,2893.30477,1790.69448,-4336.98535,4323.49062,1627.04515,-3861.28521,2901.3775,1675.69721,-4718.44661,4305.68004,1567.98339,-3702.74663,2912.34416,1562.79254,-4714.33675,4232.57411,1628.5305,-3494.61365,2946.66839,1627.61986,-4367.68734,3668.34641,2703.37772,382.91498,3213.44662,2699.05853,-379.21031,4159.41417,2759.3441,-1971.86583,3307.40833,2772.76683,-3604.8789,3948.31896,3503.75819,-350.97557,3106.46081,3528.68342,-1780.58231,3815.93728,3632.69067,-236.71804,3068.29512,3623.77739,-1640.29598,4204.19204,3787.65249,-1159.90359,3154.92404,3821.47956,-2740.897\r\npexels-ketut-subiyanto-4853714.jpg,squating,1647.35019,1490.07198,-2628.95131,1691.58316,1386.6713,-2536.78799,1730.42238,1384.16845,-2536.63206,1769.93525,1381.33237,-2536.46135,1590.61301,1389.8862,-2558.18272,1549.83068,1388.9612,-2557.97052,1508.92448,1388.72498,-2559.08036,1813.90655,1416.38419,-1730.03471,1455.04761,1425.56673,-1812.34694,1718.03653,1570.8999,-2298.0957,1573.07136,1574.28682,-2319.83566,1996.44864,1866.73307,-1020.78533,1200.40774,1844.2086,-1558.08496,2033.21218,2499.07762,-698.58706,1189.41927,2486.29886,-1735.2258,2117.58423,2895.39582,-1362.11407,1296.76533,2863.25294,-2584.13529,2167.44852,3024.29903,-1533.51581,1287.49061,2995.10711,-2853.58977,2159.04546,3000.33045,-1772.74811,1359.41756,2957.14509,-2989.08472,2107.8918,2965.07639,-1471.18163,1399.42396,2908.92756,-2652.2963,1813.77661,2917.61434,153.74212,1354.59375,2931.78999,-150.19231,1931.10013,3420.43412,-853.65003,1294.91878,3649.13821,-289.07296,1770.04266,3983.42192,569.98944,1234.18975,4228.06799,1437.64055,1694.10908,4046.7875,675.43298,1233.48117,4310.24122,1558.62796,1830.51324,4291.16249,-102.93719,1251.3206,4526.30138,810.94253\r\npexels-li-sun-371049.jpg,squating,3740.19984,1769.11932,-2961.18587,3832.46285,1706.48264,-2963.52042,3866.90085,1709.36745,-2961.46894,3901.82308,1711.89439,-2961.41738,3755.91397,1700.52721,-2728.99228,3735.78115,1697.34102,-2728.58721,3716.20129,1696.26103,-2727.44307,4018.97797,1732.93397,-2570.10103,3773.50219,1710.92344,-1474.57579,3827.42158,1863.9788,-2801.31938,3738.06221,1850.64083,-2494.62351,4313.70492,2114.98906,-2821.3754,3864.93935,2111.58832,-384.99137,4605.72725,2414.47153,-4953.71283,3889.72428,2174.59081,1165.97411,4608.82229,2120.23016,-7100.25039,3787.16993,1994.22164,2533.40509,4653.76807,1989.05928,-7574.36788,3801.68051,1957.39617,2936.94606,4626.7793,1939.62306,-7592.02314,3789.7311,1938.34323,2941.96293,4584.39851,1998.92104,-7183.08314,3771.63065,1942.5226,2592.72966,4794.83282,3004.23311,-771.40835,4474.28756,3023.37399,769.85648,4259.44941,3330.97571,-3900.86354,3711.90015,3275.18057,-958.47612,4551.57572,4041.85323,-2072.05735,4159.68029,3839.60877,545.37211,4641.57973,4181.48835,-1962.29206,4303.4819,3921.44539,642.32611,4353.1426,4296.43304,-3055.31745,3917.48204,4051.52762,-125.63319\r\npexels-monstera-6998874.jpg,squating,2694.12084,794.8334,-647.36046,2637.80957,731.81016,-520.46833,2632.99322,734.27541,-519.96772,2629.65044,737.2579,-517.91412,2614.77509,736.58721,-752.89741,2595.74287,740.34921,-752.01915,2576.22582,744.70443,-753.27306,2540.77961,788.87936,145.95018,2471.32586,790.14724,-897.39335,2667.53777,886.651,-413.87501,2644.18235,892.44506,-699.41098,2530.70855,1253.5598,629.32139,2329.83537,1271.2352,-1192.45566,2890.44233,1779.18282,-240.31586,2753.87958,1766.08263,-832.93086,2962.3902,1439.41938,-1867.26065,2926.17736,1348.4667,429.31991,3026.59576,1275.02058,-1960.53786,3000.06683,1198.04327,378.36385,2929.77389,1227.17101,-1834.19163,2894.29229,1149.97507,349.84851,2884.94072,1294.4145,-1866.74011,2860.38309,1224.63655,462.85648,1972.08282,2053.1559,667.12388,1769.98412,2110.93759,-664.00073,2568.93426,2433.80915,999.23216,2505.13624,2600.31667,-1145.0925,2269.62898,3019.08633,1425.53321,2002.78949,3331.81682,-1116.95285,2177.09248,3121.0405,1472.43307,1866.85426,3437.01972,-1146.11133,2510.51032,3174.87069,1455.36545,2253.15791,3613.63223,-1402.00705\r\npexels-monstera-6999027.jpg,squating,2278.79887,742.8068,-1282.73606,2227.04858,695.68434,-1143.01855,2226.40866,696.35601,-1142.8452,2227.20416,697.30442,-1141.16207,2202.93403,704.21334,-1353.40286,2186.17578,709.2442,-1352.94689,2169.29049,715.09218,-1354.01286,2173.01878,741.98597,-351.42911,2101.61772,762.35521,-1325.74967,2275.0122,818.37468,-1001.49316,2255.06315,832.08293,-1269.09056,2268.76956,1151.26328,360.61551,2014.24607,1153.96016,-1687.05896,2531.44794,1569.50608,-311.34222,2342.45013,1593.68157,-1733.24111,2611.58788,1312.85061,-1840.31066,2617.21686,1332.02155,-1045.84891,2667.17769,1212.98907,-2003.77856,2700.44045,1244.47666,-1165.94345,2587.21746,1168.92618,-1945.3825,2626.14181,1206.17131,-1177.34034,2558.2908,1210.04061,-1866.24076,2587.40093,1250.84585,-1019.70771,1875.05188,1956.12822,700.0668,1667.22032,1997.27505,-699.77978,2189.49214,2367.02641,975.42183,1983.99961,2516.80166,-1690.23148,2026.09012,2934.15189,1960.19768,1775.74257,3285.40778,-1661.01633,1934.37569,3057.51215,2054.26777,1667.00636,3435.39198,-1704.18267,2360.06243,3042.28368,1766.46391,2091.8066,3462.56257,-2347.33253\r\npexels-monstera-6999119.jpg,squating,1808.13357,1780.19119,-458.33528,1770.15285,1704.14435,-372.73678,1765.85682,1706.54926,-372.47705,1762.47175,1709.32241,-370.92563,1752.46809,1702.42518,-600.91845,1733.50176,1700.52189,-600.13709,1714.42942,1699.48862,-600.7395,1672.26759,1736.93727,240.5246,1611.16193,1722.73903,-799.00984,1774.40028,1863.1563,-223.36758,1751.3447,1860.85461,-513.94352,1537.36182,2182.24494,842.97727,1507.7692,2169.6897,-1046.47807,1952.26109,2692.39107,362.78477,1950.2574,2664.90373,-665.15603,2052.60578,2374.04036,-560.84457,2062.7075,2315.01661,561.02906,2105.27377,2261.98468,-576.98405,2103.05503,2200.42018,507.20822,2019.58373,2208.7918,-437.60218,2031.74872,2173.48567,461.1299,1987.5745,2255.89094,-535.74877,2001.68643,2238.38481,585.03484,950.77372,3084.17088,647.58489,885.97776,3102.63852,-644.70612,1487.42138,3498.37576,1208.51876,1474.96339,3697.05504,-988.91088,1228.07185,4216.29507,1661.9755,1157.08854,4568.4542,-1195.53414,1103.4672,4351.9198,1714.03238,1032.11217,4718.52147,-1248.86912,1583.74325,4426.22839,1817.66082,1458.03619,4855.8184,-1437.13379\r\npexels-monstera-6999120.jpg,squating,1626.10469,2166.09056,-658.47145,1580.57301,2118.29378,-571.28973,1578.85308,2120.60199,-571.2413,1578.17054,2123.32001,-570.06431,1559.82227,2119.70065,-753.81024,1543.92333,2121.0816,-752.96799,1527.69585,2123.23,-753.24218,1512.86431,2162.26899,24.6184,1446.57939,2156.67312,-811.73619,1610.8049,2236.06828,-439.63672,1589.27943,2239.0606,-669.08111,1509.30692,2509.24532,599.82501,1349.78067,2463.47038,-1069.28381,1848.45718,2777.7076,93.53211,1667.13682,2793.15862,-925.13454,1916.20448,2535.02474,-1227.87301,1878.33595,2552.67894,66.55935,1934.88064,2470.72688,-1391.49589,1930.39577,2475.20403,17.61162,1851.77811,2416.90875,-1330.00689,1878.87542,2445.07662,-4.31066,1833.69794,2455.57527,-1239.96178,1849.52067,2484.30657,90.90278,977.49638,3182.19725,591.56982,827.0985,3174.91874,-591.36804,1458.40203,3404.73228,1017.16822,1357.44035,3452.11436,-1729.39001,1287.4454,3996.84255,1433.58944,1121.77872,4266.37446,-2047.09026,1172.61577,4118.84437,1470.21509,988.14191,4409.82336,-2110.0187,1618.19887,4136.59218,1457.6959,1470.8835,4494.92251,-2501.92348\r\npexels-polina-tankilevitch-7746392.jpg,squating,1023.16201,1611.02057,-1933.5618,1021.45791,1568.35127,-1911.81755,1030.21789,1560.82267,-1912.04143,1039.48367,1553.14958,-1912.29856,988.41882,1580.62327,-1939.33225,976.04066,1582.14122,-1938.62736,963.48757,1584.20795,-1938.08293,1048.33484,1521.77042,-1489.57789,937.54381,1565.34576,-1612.33544,1039.33394,1612.0643,-1746.28663,1010.74338,1629.72307,-1779.34897,1193.06684,1605.24058,-1138.85415,850.07322,1603.19746,-1380.7528,1267.75253,1806.95754,-1686.35452,987.28919,1781.67576,-1788.69534,1007.67219,1729.19959,-2382.94864,1186.92136,1784.92963,-2061.53417,950.32817,1708.36151,-2573.79031,1229.34401,1795.51578,-2212.47053,936.82981,1687.20514,-2507.56598,1224.43557,1771.41613,-2196.49887,953.1464,1698.65066,-2374.6798,1210.84094,1768.50682,-2058.96664,1085.74212,2005.35911,17.46986,866.05924,2019.79423,-17.61112,1366.04786,2096.86321,-1040.2602,633.61323,2189.91208,-977.68319,1357.04195,2381.75833,-72.08154,623.60549,2475.46828,77.38711,1299.14367,2444.56708,6.7517,654.32721,2533.07086,156.70703,1514.82868,2490.4089,-418.50799,513.99243,2589.80119,-321.32167\r\npexels-yogendra-singh-4384679.jpg,squating,1945.40696,1385.91333,-1473.46929,1932.61698,1309.1486,-1305.93302,1944.97122,1311.95848,-1305.73677,1958.5569,1315.04738,-1305.18504,1872.08233,1298.93418,-1484.52146,1842.50281,1293.69436,-1484.31167,1812.51968,1289.41404,-1484.72472,1894.8811,1337.80711,-507.30348,1702.47304,1302.1057,-1279.19584,1929.54167,1466.05822,-1189.58957,1859.89367,1459.4842,-1396.56719,1860.33662,1698.97816,25.64183,1454.41318,1650.33055,-1585.04579,2264.41162,2007.01061,-778.41606,1790.38241,2110.51499,-1750.33264,2250.32046,1677.55251,-2247.69277,2089.87809,1642.26849,-1036.23445,2287.57795,1597.84058,-2433.77334,2200.15788,1543.33985,-1118.81618,2181.33455,1527.27944,-2299.55118,2116.14115,1482.49346,-1167.20979,2146.92058,1584.1918,-2247.65888,2056.26937,1534.23329,-1029.37081,1199.98015,2497.5317,536.8998,885.80467,2510.36257,-536.10624,1893.74393,2608.14947,454.42618,1340.39588,2692.60191,-2593.33586,1671.50058,3244.57259,1046.51127,1072.67471,3527.30814,-2294.38443,1524.94162,3362.48256,1106.74576,934.74992,3666.69,-2306.91553,2011.7087,3481.38019,846.45769,1377.13027,3788.09793,-3087.17851\r\np11.jpg,standing,608.61931,98.06759,-195.62759,620.41939,85.83166,-194.71634,625.33344,85.4674,-194.77003,630.49671,84.96223,-194.84642,609.67262,86.51208,-162.81267,606.78749,86.35518,-162.6754,603.86066,86.32454,-162.54848,646.97151,89.31193,-144.88835,612.96349,89.03267,12.59784,621.9408,110.30593,-175.85049,608.07331,110.43665,-130.60862,697.98325,162.12272,-165.4623,598.49377,176.90261,159.77513,720.43701,262.38592,-167.85984,602.17724,275.07041,239.17822,730.15907,361.44681,-255.65426,584.14574,357.96925,79.00746,742.77527,389.36191,-297.96932,581.44978,384.0065,67.81886,728.34404,393.47461,-328.9711,575.38166,385.86233,6.23843,720.14816,383.44066,-267.185,584.51546,377.8148,49.26991,682.50397,363.39975,-104.6629,621.82274,370.67219,104.81434,704.69559,512.25841,-141.55001,601.69422,505.13575,184.26737,735.00923,648.87584,-31.16642,596.62498,624.39942,380.10567,748.50204,667.7664,-27.81434,613.80451,648.01831,393.32287,705.31845,698.63563,-180.81383,534.13399,663.04529,280.66168\r\np12.jpg,standing,610.65559,110.39466,-396.90979,622.17201,97.9093,-384.88934,627.7169,97.94284,-384.91692,633.39893,97.84344,-384.86778,608.44685,98.12349,-366.64177,604.09126,97.98985,-366.36837,599.68132,97.99603,-366.32977,647.29759,105.75639,-273.67435,602.33044,104.50586,-180.238,623.81359,125.62135,-353.96404,605.49633,125.14561,-327.20966,688.59749,180.8717,-279.85409,590.97088,187.06131,26.00851,679.84344,287.80347,-345.49461,565.04387,271.192,63.52704,624.21227,344.24756,-502.40444,517.09175,333.45705,-173.568,611.57692,366.25135,-565.92003,502.08485,354.6285,-205.36674,604.52686,354.01217,-585.20435,499.29581,350.69868,-269.70667,609.05907,346.22381,-511.62708,510.37994,345.57963,-206.63801,699.8262,369.32194,-90.46963,635.99255,372.36134,90.48616,711.4164,516.4181,-175.86708,579.63421,500.32871,-0.65583,743.43567,646.54558,38.64753,584.98329,624.45379,257.2208,753.6412,666.70399,46.5262,603.65608,646.88024,273.82502,707.4649,693.62878,-128.73146,522.93591,665.83006,143.26929\r\np2.jpg,standing,612.64599,98.57985,-365.95596,624.01356,85.92798,-359.86099,629.0464,85.7667,-359.90143,634.29291,85.47849,-359.87198,612.19963,86.40908,-336.19877,608.6145,86.26505,-336.07498,604.98524,86.251,-336.00208,648.79456,91.13078,-277.81897,610.80833,90.35877,-153.65736,625.55408,112.07726,-333.71288,609.96361,111.9018,-297.96474,696.08604,167.34429,-283.80428,594.50489,179.42886,29.92267,704.01817,273.30452,-307.84,582.61818,276.34231,107.67728,689.40857,365.0971,-429.4001,552.86579,360.89921,-56.8559,692.5824,391.1283,-488.64128,544.4334,385.91473,-70.07337,678.20938,389.79891,-516.7263,542.22839,387.52942,-140.35536,674.54132,379.87191,-441.75724,553.53432,380.05202,-89.78244,688.10043,363.56901,-108.18142,627.30522,369.7989,108.24452,699.31122,510.76658,-155.00933,597.07226,503.50471,208.87459,731.3842,649.40074,-48.98362,590.54993,630.65686,393.60672,745.60631,671.3531,-50.49731,607.38167,656.23664,403.41164,695.71983,693.79134,-212.79303,526.81801,668.90739,287.76478\r\np20.jpg,standing,606.20506,96.00622,-276.10107,618.30677,84.05051,-272.90405,623.30528,83.84699,-272.95553,628.52955,83.49472,-272.99927,607.19429,84.31614,-244.25346,604.29829,84.01839,-244.11499,601.37226,83.85344,-243.92132,644.84695,88.52376,-206.03741,609.92908,86.99588,-60.46315,619.3795,109.24908,-250.56271,605.34679,108.81881,-208.70131,694.92317,165.10694,-209.31137,593.22777,179.06854,98.60649,712.37953,271.89686,-221.43766,591.71844,281.5138,172.91206,723.75443,369.66921,-324.66751,569.92737,366.89139,21.63191,737.35168,395.42524,-370.75306,564.86755,392.61497,14.51282,724.65775,400.44106,-403.47603,559.73206,393.88754,-48.09393,715.95482,391.23267,-338.75824,568.72345,385.96177,-7.9757,685.71472,361.46298,-105.7655,623.67126,370.9459,105.83094,705.88982,509.35947,-155.53454,601.2677,507.98545,215.94181,735.23651,648.24125,-43.28746,596.09276,628.94029,431.29379,748.59528,668.14543,-41.59521,613.29979,652.85731,445.96733,703.08609,698.2654,-202.22189,533.34679,669.86784,329.53083\r\np29.jpg,standing,685.98755,89.05592,-505.85907,693.16185,76.29347,-476.92059,698.36472,76.30652,-476.90189,703.65608,76.22832,-476.82545,677.24113,76.44934,-482.24499,671.4576,76.44873,-482.20085,665.63591,76.50575,-482.11452,707.86636,85.24635,-309.5936,655.90103,85.11402,-328.92262,694.47975,105.11043,-444.17187,674.46732,105.15025,-449.64977,741.05278,168.92134,-191.74585,611.71379,172.61709,-211.23358,763.2962,270.38079,-317.01538,575.60711,285.25529,-326.64356,702.42348,242.1415,-618.04871,651.41357,263.63329,-559.73549,679.5446,238.84501,-686.69029,676.86623,260.15548,-618.79646,682.29889,219.48864,-675.48424,674.41345,241.9,-604.58973,687.73926,222.12858,-619.30347,670.29076,242.93947,-556.59538,715.26077,339.6094,17.67159,638.84865,340.94087,-17.81093,751.43784,483.46414,-36.66187,618.99361,485.34276,-36.93475,750.04684,589.33252,246.96186,599.6862,594.82757,234.79084,739.47304,602.72687,265.68142,601.54125,611.56035,250.49335,771.51924,640.8202,107.99125,583.46489,642.03157,72.83389\r\np3.jpg,standing,606.66187,130.80217,-374.21623,619.4593,117.95499,-366.32111,625.27611,118.38878,-366.37806,631.1734,118.687,-366.37459,605.76134,117.13677,-347.64271,601.4579,116.69813,-347.39243,597.12898,116.37259,-347.45342,645.48996,127.02938,-271.37707,600.63454,122.60341,-183.13021,619.59023,147.17548,-336.09371,601.28345,145.48836,-310.8493,687.02263,204.47754,-278.32592,589.13399,202.01688,-8.29457,669.1571,311.66599,-330.87765,567.45991,279.87186,-64.29488,592.729,315.34482,-424.48105,517.45399,306.65146,-379.20956,569.31969,324.17382,-474.6999,499.98177,317.41289,-425.7674,570.02209,300.15777,-481.83483,499.99397,307.95763,-469.96693,578.31043,297.7084,-427.23248,510.38681,306.29492,-407.52045,705.54932,379.10497,-91.05628,644.64111,379.59643,91.27909,696.7569,517.39855,-220.43427,581.24992,495.60378,20.12527,743.09464,650.83025,-84.21843,582.15752,622.07409,262.91462,758.19099,672.77385,-82.71786,599.32178,645.92829,278.57479,702.91954,694.66823,-245.72172,517.51198,657.76966,171.38773\r\np30.jpg,standing,679.90234,69.97858,-365.23659,687.85919,58.95983,-334.73724,693.16017,59.42479,-334.72378,698.59901,59.78137,-334.73949,672.1505,58.24526,-336.92329,666.43631,57.96966,-336.86619,660.66605,57.74916,-336.89579,704.12849,70.46605,-172.82801,651.67488,67.04484,-175.97403,688.88046,86.90565,-306.51331,668.19283,85.67518,-307.77775,738.60931,157.66574,-79.59121,608.36109,151.30211,-63.69374,774.06609,255.57959,-131.07992,568.30444,251.20917,-134.2169,700.7283,258.83338,-321.46992,643.62213,247.41254,-356.6206,677.95464,265.47951,-374.6331,663.92921,249.29096,-416.82159,674.05037,249.04105,-373.02959,668.53828,234.89096,-411.0117,681.42242,248.37564,-323.60149,664.19739,234.79736,-358.14953,711.47308,334.06199,5.46779,632.39666,332.8939,-5.38057,739.31816,481.86589,-4.10938,620.83397,483.9893,29.17216,754.52003,596.36308,262.83588,603.68095,594.59892,299.53823,747.49069,608.39135,281.03653,605.73799,608.05078,317.48142,772.82059,654.59581,113.02197,590.56435,648.60376,144.4557\r\np39.jpg,standing,708.87383,203.6462,-197.75465,714.89532,192.92539,-180.58325,718.47359,192.87357,-180.52773,722.13371,192.79864,-180.59757,703.2357,192.44972,-184.14316,699.28131,191.92961,-184.02115,695.30136,191.48565,-184.05281,725.7943,195.4618,-48.65778,688.13553,193.20057,-62.42305,713.98384,213.66207,-146.56802,700.82985,212.86345,-150.68718,750.25154,247.41318,-22.93019,656.16066,242.10649,-20.29805,770.0882,280.39721,-266.94513,649.35776,282.33351,-268.25489,733.58711,275.55509,-550.11261,684.2807,266.7576,-563.67126,724.30374,281.22805,-612.39857,693.71956,266.89617,-635.46337,714.9176,272.35579,-615.77492,697.55905,260.06231,-634.25316,718.56239,273.54195,-560.02754,695.40817,263.22236,-571.47827,720.24582,395.30375,-4.08158,661.0862,392.38589,4.07673,730.59868,513.65144,-73.93305,635.44914,499.9732,-59.05075,724.87282,619.77156,65.4047,631.66389,605.42556,96.16292,715.98885,633.30328,69.58106,636.90643,620.29088,101.09108,739.11499,660.03478,-65.56777,620.31055,645.99695,-30.55532`;\r\n\r\nexport const dataSimple = `image,name,x0,y0,z0,x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4,x5,y5,z5,x6,y6,z6,x7,y7,z7,x8,y8,z8,x9,y9,z9,x10,y10,z10,x11,y11,z11,x12,y12,z12,x13,y13,z13,x14,y14,z14,x15,y15,z15,x16,y16,z16,x17,y17,z17,x18,y18,z18,x19,y19,z19,x20,y20,z20,x21,y21,z21,x22,y22,z22,x23,y23,z23,x24,y24,z24,x25,y25,z25,x26,y26,z26,x27,y27,z27,x28,y28,z28,x29,y29,z29,x30,y30,z30,x31,y31,z31,x32,y32,z32\r\nimage_003.jpg,squating,375.26071,641.40564,-410.52301,386.72659,626.69029,-376.83209,393.93524,627.63866,-376.81798,401.32032,628.47523,-376.80454,366.71524,624.39625,-375.1965,359.25215,623.30139,-375.11678,351.72849,622.41325,-374.93623,408.62878,639.6476,-201.5644,340.02038,631.09344,-187.53041,385.18702,662.93129,-347.06914,359.16292,659.35532,-342.83129,443.35811,717.66106,-121.50612,278.56821,707.83417,-99.93561,534.59303,786.10107,-377.62761,173.12924,776.08665,-322.10947,517.74974,694.18922,-641.63822,201.24327,678.34206,-538.29704,523.2964,662.75673,-709.46224,202.51144,646.01822,-582.60411,508.97427,656.06834,-658.42369,216.86359,635.71709,-543.83186,499.1748,672.43042,-631.36585,223.58067,653.33847,-528.66735,399.8721,888.26584,-6.39539,305.57822,886.20552,6.99108,492.16522,903.06824,-584.00323,243.32317,903.80295,-541.56993,438.83314,1053.53439,-212.681,268.1323,1047.77939,-197.17978,415.54111,1071.80618,-185.84528,284.1281,1067.03979,-171.89941,465.81363,1121.36009,-385.91878,247.81727,1107.80411,-373.60922\r\nimage_004.jpg,standing,378.31592,326.0743,-385.64633,390.06056,313.78479,-352.02044,396.83286,314.62683,-351.83699,403.72546,315.34266,-351.83633,370.26867,312.82486,-351.35946,363.44439,312.54803,-351.28214,356.61254,312.42029,-351.35905,412.72077,330.88142,-150.95742,348.03929,326.50024,-147.15819,390.31545,348.20683,-312.31107,364.42391,346.49715,-311.32594,449.51866,433.79631,-26.2358,297.22445,426.07742,-45.64553,535.21294,501.6679,-265.24943,207.37304,490.50072,-263.99667,529.61615,391.30032,-664.42419,218.3808,389.91936,-605.04118,536.6082,360.57861,-751.06757,215.81756,362.19856,-686.5356,522.43928,352.43099,-736.83074,230.12979,355.66643,-679.85525,513.99378,367.56416,-671.28539,237.69517,370.00607,-612.03468,408.53665,676.31172,8.1728,317.92862,673.79463,-7.7148,422.80089,867.39227,-3.40291,298.90793,870.50491,-42.90637,431.34083,1050.50949,221.6046,274.84669,1050.27489,165.1498,421.22227,1076.06812,228.93826,274.76178,1073.49831,169.36046,452.33117,1106.40091,-13.77375,272.35331,1109.33067,-74.18771`;\r\n","import { Landmark } from \"@mediapipe/pose\";\r\n\r\nexport const bakedLandmarks: Landmark[] = [\r\n  {\r\n    x: 0.4646156430244446,\r\n    y: 0.5593338012695312,\r\n    z: -0.8239560127258301,\r\n    visibility: 0.99994957447052,\r\n  },\r\n  {\r\n    x: 0.4910646080970764,\r\n    y: 0.5032669305801392,\r\n    z: -0.759030818939209,\r\n    visibility: 0.9998297095298767,\r\n  },\r\n  {\r\n    x: 0.5077638030052185,\r\n    y: 0.5041847825050354,\r\n    z: -0.7584570646286011,\r\n    visibility: 0.9997925758361816,\r\n  },\r\n  {\r\n    x: 0.5250208973884583,\r\n    y: 0.5047411918640137,\r\n    z: -0.758417010307312,\r\n    visibility: 0.9997578263282776,\r\n  },\r\n  {\r\n    x: 0.44466567039489746,\r\n    y: 0.49903419613838196,\r\n    z: -0.75492262840271,\r\n    visibility: 0.9998853206634521,\r\n  },\r\n  {\r\n    x: 0.4280518591403961,\r\n    y: 0.4953222870826721,\r\n    z: -0.7555557489395142,\r\n    visibility: 0.9998872876167297,\r\n  },\r\n  {\r\n    x: 0.4135173261165619,\r\n    y: 0.4910086691379547,\r\n    z: -0.7561649084091187,\r\n    visibility: 0.9999091625213623,\r\n  },\r\n  {\r\n    x: 0.5466713309288025,\r\n    y: 0.5205276608467102,\r\n    z: -0.35151684284210205,\r\n    visibility: 0.9998655915260315,\r\n  },\r\n  {\r\n    x: 0.3929872512817383,\r\n    y: 0.5005139112472534,\r\n    z: -0.32378950715065,\r\n    visibility: 0.9999457597732544,\r\n  },\r\n  {\r\n    x: 0.492016464471817,\r\n    y: 0.6175683736801147,\r\n    z: -0.6683616638183594,\r\n    visibility: 0.9998496770858765,\r\n  },\r\n  {\r\n    x: 0.4336431920528412,\r\n    y: 0.6115054488182068,\r\n    z: -0.6625021696090698,\r\n    visibility: 0.9999435544013977,\r\n  },\r\n  {\r\n    x: 0.6330879926681519,\r\n    y: 0.760109543800354,\r\n    z: -0.08585440367460251,\r\n    visibility: 0.9977128505706787,\r\n  },\r\n  {\r\n    x: 0.2768475413322449,\r\n    y: 0.7500014901161194,\r\n    z: -0.11971918493509293,\r\n    visibility: 0.9997439980506897,\r\n  },\r\n  {\r\n    x: 0.8205326199531555,\r\n    y: 1.0201590061187744,\r\n    z: -0.3094227612018585,\r\n    visibility: 0.6776965260505676,\r\n  },\r\n  {\r\n    x: 0.03344549983739853,\r\n    y: 0.8804448246955872,\r\n    z: -0.756677508354187,\r\n    visibility: 0.9738364219665527,\r\n  },\r\n  {\r\n    x: 0.8331389427185059,\r\n    y: 1.075512170791626,\r\n    z: -0.631975531578064,\r\n    visibility: 0.6371433138847351,\r\n  },\r\n  {\r\n    x: 0.2143615037202835,\r\n    y: 0.43546396493911743,\r\n    z: -1.405727744102478,\r\n    visibility: 0.986697256565094,\r\n  },\r\n  {\r\n    x: 0.8660882711410522,\r\n    y: 1.0927283763885498,\r\n    z: -0.6656485795974731,\r\n    visibility: 0.526259183883667,\r\n  },\r\n  {\r\n    x: 0.25839632749557495,\r\n    y: 0.32643380761146545,\r\n    z: -1.5278096199035645,\r\n    visibility: 0.9583914875984192,\r\n  },\r\n  {\r\n    x: 0.8243924975395203,\r\n    y: 1.0676932334899902,\r\n    z: -0.6153644323348999,\r\n    visibility: 0.5582495331764221,\r\n  },\r\n  {\r\n    x: 0.2900049686431885,\r\n    y: 0.3036554753780365,\r\n    z: -1.3854984045028687,\r\n    visibility: 0.9582709670066833,\r\n  },\r\n  {\r\n    x: 0.8049681782722473,\r\n    y: 1.073922038078308,\r\n    z: -0.6178325414657593,\r\n    visibility: 0.5587793588638306,\r\n  },\r\n  {\r\n    x: 0.28802213072776794,\r\n    y: 0.3587382137775421,\r\n    z: -1.3725390434265137,\r\n    visibility: 0.9511489272117615,\r\n  },\r\n  {\r\n    x: 0.5680841207504272,\r\n    y: 1.504276156425476,\r\n    z: -0.035712361335754395,\r\n    visibility: 0.0009563518106006086,\r\n  },\r\n  {\r\n    x: 0.32357341051101685,\r\n    y: 1.5049561262130737,\r\n    z: 0.038887687027454376,\r\n    visibility: 0.0015225938986986876,\r\n  },\r\n  {\r\n    x: 0.5838075876235962,\r\n    y: 2.0881950855255127,\r\n    z: -0.08206094801425934,\r\n    visibility: 0.0019416423747316003,\r\n  },\r\n  {\r\n    x: 0.3513680100440979,\r\n    y: 2.100414752960205,\r\n    z: -0.11837738752365112,\r\n    visibility: 0.0023163193836808205,\r\n  },\r\n  {\r\n    x: 0.6042106747627258,\r\n    y: 2.624472141265869,\r\n    z: 0.3775874972343445,\r\n    visibility: 0.0002203256153734401,\r\n  },\r\n  {\r\n    x: 0.36810317635536194,\r\n    y: 2.6338565349578857,\r\n    z: -0.048291780054569244,\r\n    visibility: 0.0001823413767851889,\r\n  },\r\n  {\r\n    x: 0.6066969037055969,\r\n    y: 2.7053098678588867,\r\n    z: 0.4145108163356781,\r\n    visibility: 0.00019128256826661527,\r\n  },\r\n  {\r\n    x: 0.358309805393219,\r\n    y: 2.7128617763519287,\r\n    z: -0.049897607415914536,\r\n    visibility: 0.00017097547242883593,\r\n  },\r\n  {\r\n    x: 0.5918673872947693,\r\n    y: 2.79433536529541,\r\n    z: 0.1199009045958519,\r\n    visibility: 0.00040064682252705097,\r\n  },\r\n  {\r\n    x: 0.40932124853134155,\r\n    y: 2.789179801940918,\r\n    z: -0.46221429109573364,\r\n    visibility: 0.00038063834654167295,\r\n  },\r\n];","/**\r\n * @class EMADictSmoothing\r\n * @brief Smoothes pose classification.\r\n * Smoothing is done by computing Exponential Moving Average for every pose\r\n *  class observed in the given time window. Missed pose classes arre replaced\r\n *   with 0.\r\n *\r\n *   Args:\r\n *     data: Dictionary with pose classification. Sample:\r\n *         {\r\n *           'pushups_down': 8,\r\n *           'pushups_up': 2,\r\n *         }\r\n *\r\n *  Result:\r\n *    Dictionary in the same format but with smoothed and float instead of\r\n *     integer values. Sample:\r\n *       {\r\n *         'pushups_down': 8.3,\r\n *         'pushups_up': 1.7,\r\n *      }\r\n */\r\nexport class EMADictSmoothing {\r\n  private _windowSize: number;\r\n  private _alpha: number;\r\n  private _dataInWindow: { [key: string]: number }[];\r\n\r\n  /**\r\n   * @brief Constructor for the class\r\n   * @param windowSize The time window for the given elements\r\n   * @param alpha The alpha factor\r\n   */\r\n  constructor(windowSize: number = 10, alpha: number = 0.2) {\r\n    this._windowSize = windowSize;\r\n    this._alpha = alpha;\r\n    this._dataInWindow = [];\r\n  }\r\n\r\n  /**\r\n   * @brief Calls the EMADictSmoothing funcionalite\r\n   * @param data One dictionary for the original classification\r\n   * @return The same dictionary but with the smooth apply to it\r\n   */\r\n  public call(data: { [key: string]: number }) {\r\n    // Add new data to the beginning of the window for simpler code.\r\n\r\n    //self._data_in_window.insert(0, data)\r\n    this._dataInWindow.unshift(data);\r\n\r\n    //self._data_in_window = self._data_in_window[:self._window_size]\r\n    this._dataInWindow = this._dataInWindow.slice(0, this._windowSize);\r\n\r\n    // Get all keys.\r\n    // keys = set([key for data in self._data_in_window for key, _ in data.items()])\r\n    //[key for data in this._dataInWindow for key, _ in data.items()]\r\n    let keysArray: string[] = [];\r\n\r\n    this._dataInWindow.forEach((elem) => {\r\n      for (let key in elem) {\r\n        keysArray.push(key);\r\n      }\r\n    });\r\n\r\n    let keys: Set<string> = new Set<string>(keysArray);\r\n\r\n    // Get smoothed values.\r\n    //smoothed_data = dict()\r\n    let smoothed_data: { [key: string]: number } = {};\r\n    keys.forEach((key) => {\r\n      let factor: number = 1.0;\r\n      let top_sum: number = 0.0;\r\n      let bottom_sum: number = 0.0;\r\n\r\n      this._dataInWindow.forEach((auxData) => {\r\n        //value = data[key] if key in data else 0.0\r\n        let value: number = 0.0;\r\n\r\n        if (key in auxData) {\r\n          value = auxData[key];\r\n        }\r\n\r\n        top_sum += factor * value;\r\n        bottom_sum += factor;\r\n\r\n        // Update factor.\r\n        factor *= 1.0 - this._alpha;\r\n      });\r\n\r\n      smoothed_data[key] = top_sum / bottom_sum;\r\n    });\r\n\r\n    return smoothed_data;\r\n  }\r\n}\r\n","import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { Camera } from \"@mediapipe/camera_utils\";\r\nimport drawingUtils from \"@mediapipe/drawing_utils\";\r\nimport mpPose, { Landmark } from \"@mediapipe/pose\";\r\nimport { Button, ButtonGroup, ToggleButton, Container } from \"react-bootstrap\";\r\nimport { PoseClassifier } from \"../Classifier/PoseClassifier\";\r\nimport { bakedLandmarks } from \"./BakedLandmark\";\r\nimport { distanceBetweenLineAndPoint } from \"../utils/index\";\r\nimport { EMADictSmoothing } from \"../Classifier/EMADictSmoothing\";\r\nimport { notify } from \"../Database\";\r\nimport \"./PoseDetection.css\";\r\n\r\nexport function PoseDetection() {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const canvasReference = useRef<HTMLCanvasElement>(null);\r\n  const [cameraLoaded, setCameraLoaded] = useState<boolean>(false);\r\n  let canvasCtx: any;\r\n  const [classification, setClassification] = useState<string>(\"\");\r\n\r\n  const [status, setStatus] = useState<string>(\"\");\r\n  const [statusNumber, setStatusNumber] = useState<string>(\"\");\r\n  const [statusNumberAux, setStatusNumberAux] = useState<string>(\"\");\r\n\r\n  const [usingBakedLandmarks] = useState<boolean>(false); // set to false if you want to use baked landmarks\r\n\r\n  const [canAnalyse, setCanAnalyse] = useState<boolean>(false);\r\n\r\n  const classifier = new PoseClassifier();\r\n  const smoother = new EMADictSmoothing();\r\n\r\n  const [exerciseError, setExerciseError] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // setClassifier(new PoseClassifier());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (usingBakedLandmarks) {\r\n      drawLandmarksOnCanvas(bakedLandmarks);\r\n      // console.table(classifier?.classify(bakedLandmarks));\r\n    }\r\n  }, []);\r\n\r\n  // tracking results callback\r\n  const results = useCallback(({ poseLandmarks }) => {\r\n    if (!poseLandmarks) return;\r\n\r\n    //const result = classifier?.classify(poseLandmarks);\r\n    let landmarks: number[][] = classifier\r\n      ?.getEmbedding()\r\n      .getNormalizedBeforeEmbedding(poseLandmarks);\r\n    let names: string[] = classifier?.getEmbedding().getLandmarksNames();\r\n    drawLandmarksOnCanvas(poseLandmarks);\r\n\r\n    //if (!result) return;\r\n    if (!landmarks || !names) return;\r\n\r\n    let allLandmarksVisible = true;\r\n    poseLandmarks.forEach((l: Landmark) => {\r\n      if (l.visibility !== undefined && l.visibility < 0.65)\r\n        allLandmarksVisible = false;\r\n    });\r\n\r\n    if (!allLandmarksVisible) {\r\n      setStatus(\"corpo inteiro não detectado\");\r\n      return;\r\n    }\r\n\r\n    let distanceFootKneeX = Math.max(\r\n      Math.abs(\r\n        landmarks[names.indexOf(\"left_foot_index\")][0] -\r\n          landmarks[names.indexOf(\"left_knee\")][0]\r\n      ),\r\n      Math.abs(\r\n        landmarks[names.indexOf(\"right_foot_index\")][0] -\r\n          landmarks[names.indexOf(\"right_knee\")][0]\r\n      )\r\n    );\r\n\r\n    let distanceKneeHipY = Math.max(\r\n      Math.abs(\r\n        landmarks[names.indexOf(\"right_hip\")][1] -\r\n          landmarks[names.indexOf(\"right_knee\")][1]\r\n      ),\r\n      Math.abs(\r\n        landmarks[names.indexOf(\"left_hip\")][1] -\r\n          landmarks[names.indexOf(\"left_knee\")][1]\r\n      )\r\n    )\r\n\r\n    setStatusNumber(distanceFootKneeX.toFixed(1));\r\n\r\n    setStatus(distanceFootKneeX > 10 && distanceKneeHipY < 20 ? \"joelhos muito abertos\" : \"\\n\");\r\n    setStatusNumberAux(distanceKneeHipY.toFixed(1).toString());\r\n  }, []);\r\n\r\n  const drawLandmarksOnCanvas = (landmarks: Landmark[]) => {\r\n    if (!canvasReference) return;\r\n    if (!canvasReference.current) return;\r\n\r\n    canvasCtx = canvasReference.current.getContext(\"2d\");\r\n\r\n    if (!canvasCtx) return;\r\n\r\n    canvasCtx = canvasReference.current\r\n      ? canvasReference.current.getContext(\"2d\")\r\n      : null;\r\n\r\n    if (webcamRef.current && webcamRef.current.video) {\r\n      canvasCtx.width = webcamRef.current.video.videoWidth;\r\n      canvasCtx.height = webcamRef.current.video.videoHeight;\r\n      canvasCtx.save();\r\n    }\r\n\r\n    canvasCtx.clearRect(\r\n      0,\r\n      0,\r\n      canvasReference.current.width,\r\n      canvasReference.current.height\r\n    );\r\n\r\n    if (!landmarks) return;\r\n    // draw\r\n    drawingUtils.drawConnectors(canvasCtx, landmarks, mpPose.POSE_CONNECTIONS, {\r\n      visibilityMin: 0.65,\r\n      color: \"white\",\r\n    });\r\n    drawingUtils.drawLandmarks(\r\n      canvasCtx,\r\n      Object.values(mpPose.POSE_LANDMARKS_LEFT).map(\r\n        (index) => landmarks[index]\r\n      ),\r\n      { visibilityMin: 0.65, color: \"white\", fillColor: \"rgb(255,138,0)\" }\r\n    );\r\n    drawingUtils.drawLandmarks(\r\n      canvasCtx,\r\n      Object.values(mpPose.POSE_LANDMARKS_RIGHT).map(\r\n        (index) => landmarks[index]\r\n      ),\r\n      { visibilityMin: 0.65, color: \"white\", fillColor: \"rgb(0,217,231)\" }\r\n    );\r\n    drawingUtils.drawLandmarks(\r\n      canvasCtx,\r\n      Object.values(mpPose.POSE_LANDMARKS_NEUTRAL).map(\r\n        (index) => landmarks[index]\r\n      ),\r\n      { visibilityMin: 0.65, color: \"white\", fillColor: \"white\" }\r\n    );\r\n    canvasCtx.restore();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!cameraLoaded || !webcamRef.current || usingBakedLandmarks) return;\r\n\r\n    const pose = new mpPose.Pose({\r\n      locateFile: (file) => {\r\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose@0.4.1624666670/${file}`;\r\n      },\r\n    });\r\n\r\n    pose.setOptions({\r\n      selfieMode: true,\r\n      modelComplexity: 1,\r\n      smoothLandmarks: true,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5,\r\n    });\r\n\r\n    // pose.onResults(onResults);\r\n    pose.onResults(results);\r\n    let camera: Camera;\r\n\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video !== null\r\n    ) {\r\n      // @ts-ignore\r\n      camera = new Camera(webcamRef.current.video, {\r\n        onFrame: async () => {\r\n          // @ts-ignore\r\n          await pose.send({ image: webcamRef.current.video });\r\n        },\r\n        // width: 1280,\r\n        // height: 720,\r\n        facingMode: \"environment\",\r\n      });\r\n      camera.start();\r\n    }\r\n  }, [cameraLoaded, usingBakedLandmarks]);\r\n\r\n  return (\r\n    <Container className=\"App\">\r\n      {/* <ButtonGroup className=\"mb-2\">\r\n        <Button onClick={() => notify()}>Butão meme</Button>\r\n        <ToggleButton\r\n          id=\"toggle-check\"\r\n          type=\"checkbox\"\r\n          variant=\"secondary\"\r\n          checked={canAnalyse}\r\n          value=\"1\"\r\n          onChange={(e) => setCanAnalyse(e.currentTarget.checked)}\r\n        >\r\n          analyse\r\n        </ToggleButton>\r\n      </ButtonGroup> */}\r\n\r\n      <div className=\"inner-container\">\r\n        <Webcam\r\n          className=\"webcam\"\r\n          audio={false}\r\n          ref={webcamRef}\r\n          mirrored={true}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{\r\n            facingMode: \"environment\",\r\n          }}\r\n          onUserMedia={() => {\r\n            // navigator.mediaDevices.enumerateDevices().then(console.log);\r\n            setCameraLoaded(true);\r\n          }}\r\n        />\r\n        <canvas ref={canvasReference} className=\"output-canvas\" />\r\n      </div>\r\n\r\n      <h2>\r\n        <code>{statusNumber}</code>\r\n        <br />\r\n        <code>{statusNumberAux}</code>\r\n        <br />\r\n        <code>{status}</code>\r\n      </h2>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { data as data } from \"../assets/fitness_poses_csvs_out_basic\";\r\nimport { loadPose } from \"../utils\";\r\nimport {\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n} from \"react-bootstrap\";\r\nimport mpPose, { Landmark } from \"@mediapipe/pose\";\r\nimport drawingUtils from \"@mediapipe/drawing_utils\";\r\nimport \"./ShowDataset.css\";\r\n\r\nexport function ShowDataset() {\r\n  const canvasReference = useRef<HTMLCanvasElement>(null);\r\n  let canvasCtx: any;\r\n\r\n  const [form, setForm] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [errorFeedback, setErrorFeedback] = useState<string>(\"\");\r\n\r\n  const [sampleInfo, setSampleInfo] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    let landmarks: Landmark[] = loadPose(data.split(\"\\n\")[1]).landmarks;\r\n  });\r\n\r\n  function handleLandmarks(landmarks: Landmark[]): Landmark[] {\r\n    return landmarks.map((l: Landmark) => {\r\n      return { x: l.x / 1920, y: l.y / 1080, z: l.z };\r\n    });\r\n  }\r\n\r\n  // const handleLandmarks = (landmarks : Landmark[]) => landmarks.map((l: Landmark) => { x: l.x / 1920, y: l.y / 1080, z: l.z })\r\n\r\n  const drawLandmarksOnCanvas = (landmarks: Landmark[]) => {\r\n    if (!canvasReference || !canvasReference.current || !landmarks) return;\r\n\r\n    canvasCtx = canvasReference.current.getContext(\"2d\");\r\n\r\n    if (!canvasCtx) return;\r\n\r\n    canvasCtx = canvasReference.current\r\n      ? canvasReference.current.getContext(\"2d\")\r\n      : null;\r\n\r\n    canvasCtx.clearRect(\r\n      0,\r\n      0,\r\n      canvasReference.current.width,\r\n      canvasReference.current.height\r\n    );\r\n\r\n    // console.table(landmarks);\r\n\r\n    // draw\r\n    drawingUtils.drawConnectors(canvasCtx, landmarks, mpPose.POSE_CONNECTIONS, {\r\n      visibilityMin: 0.65,\r\n      color: \"white\",\r\n    });\r\n    drawingUtils.drawLandmarks(\r\n      canvasCtx,\r\n      Object.values(mpPose.POSE_LANDMARKS_LEFT).map(\r\n        (index) => landmarks[index]\r\n      ),\r\n      { visibilityMin: 0.65, color: \"white\", fillColor: \"rgb(255,138,0)\" }\r\n    );\r\n    drawingUtils.drawLandmarks(\r\n      canvasCtx,\r\n      Object.values(mpPose.POSE_LANDMARKS_RIGHT).map(\r\n        (index) => landmarks[index]\r\n      ),\r\n      { visibilityMin: 0.65, color: \"white\", fillColor: \"rgb(0,217,231)\" }\r\n    );\r\n    drawingUtils.drawLandmarks(\r\n      canvasCtx,\r\n      Object.values(mpPose.POSE_LANDMARKS_NEUTRAL).map(\r\n        (index) => landmarks[index]\r\n      ),\r\n      { visibilityMin: 0.65, color: \"white\", fillColor: \"white\" }\r\n    );\r\n    canvasCtx.restore();\r\n  };\r\n\r\n  const handleForm = (value: string) => {\r\n    setForm(value);\r\n    console.log(form);\r\n\r\n    setIsValid(validateInput(value));\r\n    if (!isValid) return;\r\n\r\n    const { landmarks, name, className } = loadPose(value);\r\n\r\n    drawLandmarksOnCanvas(handleLandmarks(landmarks));\r\n    setSampleInfo(`{${name}, ${className}}`);\r\n  };\r\n\r\n  const validateInput = (text: string): boolean => {\r\n    if (text === \"\") return true;\r\n\r\n    const row = text.split(\",\");\r\n    if (row.length !== 33 * 3 + 2) {\r\n      setErrorFeedback(\r\n        `Texto possui ${row.length} componentes. Necessita de 101`\r\n      );\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>show pose</h1>\r\n\r\n      <FormGroup role=\"form\">\r\n        <Form.Control\r\n          placeholder={`Pose data. ex \\\"sample_01,fase_1,x1,y1,z1,x2,y2,z2...\\\"`}\r\n          aria-label=\"Pose data\"\r\n          value={form}\r\n          onChange={(e: any) => handleForm(e.target.value)}\r\n          isInvalid={!isValid}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errorFeedback}\r\n        </Form.Control.Feedback>\r\n      </FormGroup>\r\n\r\n      <canvas\r\n        className=\"output_canvas\"\r\n        ref={canvasReference}\r\n        // style={{\r\n        //   width: 1280 / 2,\r\n        //   height: 720 / 2,\r\n        //   //   borderWidth: 10,\r\n        //   //   borderColor: \"black\",\r\n        //   //   backgroundColor: \"lightpink\",\r\n        // }}\r\n      />\r\n      <p style={{ fontFamily: \"monospace\" }}>{sampleInfo}</p>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { Fragment } from \"react\";\r\nimport { PoseDetection } from \"./Components/PoseDetection\";\r\nimport { ShowDataset } from \"./Components/ShowDataset\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <Router>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand>\r\n              <Link to=\"/\">Fitai</Link>\r\n            </Navbar.Brand>\r\n            {/* <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/showDataset\">show</Nav.Link>\r\n            </Nav> */}\r\n          </Container>\r\n        </Navbar>\r\n\r\n        <Switch>\r\n          <Route path=\"/showDataset\">\r\n            <ShowDataset />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <PoseDetection />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}